{
  "swagger": "2.0",
  "info": {
    "title": "RightScale Policy API",
    "description": "[RightScale Policies](https://docs.rightscale.com/policies) allow you to automate governance across your multi-cloud environment to increase agility and efficiency while managing risk for your organization. The Policies API allows you to manage policies on a per-project basis. The API exposes four resources which are described below: PolicyTemplate, AppliedPolicy, Incident, and PublishedTemplate.\n\nThe API is available at the following endpoints:\n* https://governance-3.rightscale.com/api/governance\n* https://governance-4.rightscale.com/api/governance\n* https://governance-10.rightscale.com/api/governance\n\nEach project (aka account) exists at only one of the endpoints above.The HTTP response for requests made to an endpoint\nthat does not contain the corresponding project uses status code 302 and returns a \"Location\" header that contains the correct URL\n\nThe [OpenAPI specification](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md) (version 2)\nfor this API is available [here](http://reference.rightscale.com/governance-policies/governance/front_service/master/swagger.json).\n\n## PolicyTemplate\n\nThe [PolicyTemplate](http://docs.rightscale.com/policies/#basic-concepts-policy-template-) resource is a policy definition\nconsisting of [policy template language](https://docs.rightscale.com/policies/reference/policy_template_language.html) source code.\nThe language is an infrastructure-as-code style language designed to make it easy to poll arbitrary cloud resources and\ninitiate actions based on the resulting data.\n\n## AppliedPolicy\n\nThe [AppliedPolicy](http://docs.rightscale.com/policies/#basic-concepts-applied-policy) resource is a running policy\nthat has been created from a policy template. An applied policy runs continuously (per frequency) until deleted.\nA single policy template can be used with various input parameters to create multiple applied policies.\n\n## Incident\n\nThe [Incident](http://docs.rightscale.com/policies/#basic-concepts-incident) resource is created when a condition\nof an applied policy is violated. If the policy validations all pass successfully then any associated existing incident is\nautomatically marked as resolved. An incident contains all of the information about the policy violation that triggered it\nas well as the current handling status ('triggered', 'resolved', 'terminated).\n\n## PublishedTemplate\n\nThe PublishedTemplate resource is a PolicyTemplate which has been made available across all projects in your organization.\nThese include both templates you've published as well as built-in RightScale templates.\n\n## Auth\n\nRequests made to the API must be authenticated using a token obtained from the [Cloud Management API](http://docs.rightscale.com/api/general_usage.html#authentication).\nAn \"Api-Version\" header must also be set; the current version is \"1.0\".\n\nThe API actions below list privileges (aka security scopes) required to access that particular action. Privileges are granted by\nroles in the [user governance application](http://docs.rightscale.com/cm/ref/user_roles.html).\n\nThe following roles are unique to the Policies API. Except for policy_publisher, all roles can be granted for a single project or for an organization.\nPrivileges granted for a user at the organization level gives the permission to all projects within that organization.\n* policy_publisher - able to publish/unpublish policy templates. This role can only be granted at an organization level.\n* policy_viewer - able to view policy templates, applied policies, and incidents.\n* policy_manager - able to create and delete applied policies; able to view all resources.\n* policy_designer - able to upload/update and delete policy templates; able to create and delete applied policies; able to view all resources.\n\nFor more detailed information on roles, see [policy access control](http://docs.rightscale.com/policies/#access-control).\n\n",
    "version": ""
  },
  "host": "governance-3.rightscale.com",
  "basePath": "/api/governance",
  "paths": {
    "/orgs/{org_id}/published_templates": {
      "get": {
        "tags": [
          "PublishedTemplate"
        ],
        "summary": "Index published templates",
        "description": "Index retrieves the list of published templates in an organization.\n\nRequired security scopes:\n  * `governance:published_template:index`",
        "operationId": "PublishedTemplate#index",
        "parameters": [
          {
            "name": "view",
            "in": "query",
            "description": "View used to render published templates",
            "required": false,
            "type": "string",
            "enum": [
              "default",
              "extended"
            ]
          },
          {
            "name": "show_hidden",
            "in": "query",
            "description": "show_hidden will show templates that have been hidden if set to true.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "org_id",
            "in": "path",
            "description": "org_id identifies an organization by ID.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateIndexOKResponseBody"
            },
            "headers": {
              "ETag": {
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified response.",
            "headers": {
              "ETag": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateIndexBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateIndexUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateIndexForbiddenResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateIndexInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateIndexBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "security": [
          {
            "GlobalSession": []
          }
        ]
      },
      "post": {
        "tags": [
          "PublishedTemplate"
        ],
        "summary": "Creates a published template",
        "description": "Create creates an organization-scoped published template from a project-scoped policy template.\n\nRequired security scopes:\n  * `governance:published_template:create`",
        "operationId": "PublishedTemplate#create",
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "description": "org_id identifies an organization by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "CreateRequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PublishedTemplateCreateRequestBody",
              "required": [
                "template_href"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/CreateResponseBody",
              "required": [
                "location"
              ]
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateCreateBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateCreateUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateCreateForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateCreateNotFoundResponseBody"
            }
          },
          "409": {
            "description": "Conflict response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateCreateConflictResponseBody"
            },
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateCreateInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateCreateBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "security": [
          {
            "GlobalSession": []
          }
        ]
      }
    },
    "/orgs/{org_id}/published_templates/{template_id}": {
      "get": {
        "tags": [
          "PublishedTemplate"
        ],
        "summary": "Show a published template",
        "description": "Show retrieves the details of a published template.\n\nRequired security scopes:\n  * `governance:published_template:show`",
        "operationId": "PublishedTemplate#show",
        "parameters": [
          {
            "name": "view",
            "in": "query",
            "description": "View used to render published template",
            "required": false,
            "type": "string",
            "enum": [
              "default",
              "extended",
              "source"
            ]
          },
          {
            "name": "org_id",
            "in": "path",
            "description": "org_id identifies an organization by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "template_id",
            "in": "path",
            "description": "template_id identifies a published template by ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateShowResponseBody"
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateShowBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateShowUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateShowForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateShowNotFoundResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateShowInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateShowBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "security": [
          {
            "GlobalSession": []
          }
        ]
      },
      "put": {
        "tags": [
          "PublishedTemplate"
        ],
        "summary": "Update a published template",
        "description": "Update updates a published template in place for an organization, by replacing it. Any existing applied policies using the template will not be updated; they must be deleted and recreated again.\n\nRequired security scopes:\n  * `governance:published_template:update`",
        "operationId": "PublishedTemplate#update",
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "description": "org_id identifies an organization by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "template_id",
            "in": "path",
            "description": "template_id identifies a published template by ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "UpdateRequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PublishedTemplateUpdateRequestBody",
              "required": [
                "template_href"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateUpdateBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateUpdateUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateUpdateForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateUpdateNotFoundResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateUpdateInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateUpdateBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "security": [
          {
            "GlobalSession": []
          }
        ]
      },
      "delete": {
        "tags": [
          "PublishedTemplate"
        ],
        "summary": "Delete a published template",
        "description": "Delete deletes a published template from an organization. Deleting a published template will not delete any applied policies created from the template, they must be stopped explicitly.\n\nRequired security scopes:\n  * `governance:published_template:delete`",
        "operationId": "PublishedTemplate#delete",
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "description": "org_id identifies an organization by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "template_id",
            "in": "path",
            "description": "template_id identifies a published template by ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateDeleteBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateDeleteUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateDeleteForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateDeleteNotFoundResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateDeleteInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateDeleteBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "security": [
          {
            "GlobalSession": []
          }
        ]
      }
    },
    "/orgs/{org_id}/published_templates/{template_id}/hide": {
      "post": {
        "tags": [
          "PublishedTemplate"
        ],
        "summary": "Hide a published template",
        "description": "Hide hides a RightScale built-in template from an organization.\n\nRequired security scopes:\n  * `governance:published_template:hide`",
        "operationId": "PublishedTemplate#hide",
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "description": "org_id identifies an organization by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "template_id",
            "in": "path",
            "description": "template_id identifies a published template by ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateHideBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateHideUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateHideForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateHideNotFoundResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateHideInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateHideBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "security": [
          {
            "GlobalSession": []
          }
        ]
      }
    },
    "/orgs/{org_id}/published_templates/{template_id}/unhide": {
      "post": {
        "tags": [
          "PublishedTemplate"
        ],
        "summary": "Unhide a published template",
        "description": "Unhide unhides a RightScale built-in template from an organization.\n\nRequired security scopes:\n  * `governance:published_template:unhide`",
        "operationId": "PublishedTemplate#unhide",
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "description": "org_id identifies an organization by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "template_id",
            "in": "path",
            "description": "template_id identifies a published template by ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateUnhideBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateUnhideUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateUnhideForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateUnhideNotFoundResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateUnhideInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/PublishedTemplateUnhideBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "security": [
          {
            "GlobalSession": []
          }
        ]
      }
    },
    "/projects/{project_id}/applied_policies": {
      "get": {
        "tags": [
          "AppliedPolicy"
        ],
        "summary": "Index applied policies",
        "description": "Index retrieves the list of applied policies in a project.\n\nRequired security scopes:\n  * `governance:applied_policy:index`",
        "operationId": "AppliedPolicy#index",
        "parameters": [
          {
            "name": "view",
            "in": "query",
            "description": "View used to render applied policies",
            "required": false,
            "type": "string",
            "enum": [
              "default"
            ]
          },
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyIndexOKResponseBody"
            },
            "headers": {
              "ETag": {
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified response.",
            "headers": {
              "ETag": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyIndexBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyIndexUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyIndexForbiddenResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyIndexInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyIndexBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "security": [
          {
            "GlobalSession": []
          }
        ]
      },
      "post": {
        "tags": [
          "AppliedPolicy"
        ],
        "summary": "Create an applied policy",
        "description": "Create applies a policy template to a given project. The applied policy will continually run until deleted.\n\nRequired security scopes:\n  * `governance:applied_policy:create`",
        "operationId": "AppliedPolicy#create",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "CreateRequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppliedPolicyCreateRequestBody",
              "required": [
                "name",
                "template_href"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyCreateResponseBody"
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyCreateBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyCreateUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyCreateForbiddenResponseBody"
            }
          },
          "422": {
            "description": "Unprocessable Entity response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyCreateUnprocessableEntityResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyCreateInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyCreateBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "security": [
          {
            "GlobalSession": []
          }
        ]
      }
    },
    "/projects/{project_id}/applied_policies/{policy_id}": {
      "get": {
        "tags": [
          "AppliedPolicy"
        ],
        "summary": "Show an applied policy",
        "description": "Show retrieves the details of an applied policy.\n\nRequired security scopes:\n  * `governance:applied_policy:show`",
        "operationId": "AppliedPolicy#show",
        "parameters": [
          {
            "name": "view",
            "in": "query",
            "description": "View used to render applied policy",
            "required": false,
            "type": "string",
            "enum": [
              "default",
              "source"
            ]
          },
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "policy_id",
            "in": "path",
            "description": "policy_id identifies an applied policy by ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyShowResponseBody"
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyShowBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyShowUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyShowForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyShowNotFoundResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyShowInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyShowBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "security": [
          {
            "GlobalSession": []
          }
        ]
      },
      "delete": {
        "tags": [
          "AppliedPolicy"
        ],
        "summary": "Delete an applied policy",
        "description": "Delete stops and deletes an applied policy.\n\nRequired security scopes:\n  * `governance:applied_policy:delete`",
        "operationId": "AppliedPolicy#delete",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "policy_id",
            "in": "path",
            "description": "policy_id identifies an applied policy by ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyDeleteBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyDeleteUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyDeleteForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyDeleteNotFoundResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyDeleteInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyDeleteBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "security": [
          {
            "GlobalSession": []
          }
        ]
      }
    },
    "/projects/{project_id}/applied_policies/{policy_id}/evaluate": {
      "post": {
        "tags": [
          "AppliedPolicy"
        ],
        "summary": "Evaluate an applied policy",
        "description": "Evaluate executes an applied policy evaluation on demand. It does not affect the normal execution schedule.\n\nRequired security scopes:\n  * `governance:applied_policy:evaluate`",
        "operationId": "AppliedPolicy#evaluate",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "policy_id",
            "in": "path",
            "description": "policy_id identifies an applied policy by ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyEvaluateBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyEvaluateUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyEvaluateForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyEvaluateNotFoundResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyEvaluateInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyEvaluateBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "security": [
          {
            "GlobalSession": []
          }
        ]
      }
    },
    "/projects/{project_id}/applied_policies/{policy_id}/log": {
      "get": {
        "tags": [
          "AppliedPolicy"
        ],
        "summary": "Show the last evaluation log of an applied policy",
        "description": "ShowLog retrieves the last evaluation log of an applied policy. *The content type is \"text/markdown\"*.\n\nRequired security scopes:\n  * `governance:applied_policy:show_log`",
        "operationId": "AppliedPolicy#show_log",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "policy_id",
            "in": "path",
            "description": "policy_id identifies an applied policy by ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyShowLogOKResponseBody"
            },
            "headers": {
              "ETag": {
                "type": "string"
              },
              "Last-Modified": {
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified response.",
            "headers": {
              "ETag": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyShowLogBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyShowLogUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyShowLogForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyShowLogNotFoundResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyShowLogInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyShowLogBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "security": [
          {
            "GlobalSession": []
          }
        ]
      }
    },
    "/projects/{project_id}/applied_policies/{policy_id}/status": {
      "get": {
        "tags": [
          "AppliedPolicy"
        ],
        "summary": "Show the evaluation status of an applied policy",
        "description": "ShowStatus retrieves the evaluation status details of an applied policy.\n\nRequired security scopes:\n  * `governance:applied_policy:show`",
        "operationId": "AppliedPolicy#show_status",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "policy_id",
            "in": "path",
            "description": "policy_id identifies an applied policy by ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyShowStatusResponseBody"
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyShowStatusBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyShowStatusUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyShowStatusForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyShowStatusNotFoundResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyShowStatusInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/AppliedPolicyShowStatusBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "security": [
          {
            "GlobalSession": []
          }
        ]
      }
    },
    "/projects/{project_id}/incidents": {
      "get": {
        "tags": [
          "Incident"
        ],
        "summary": "Index incidents",
        "description": "Index retrieves the list of incidents in a project.\n\nRequired security scopes:\n  * `governance:incident:index`",
        "operationId": "Incident#index",
        "parameters": [
          {
            "name": "view",
            "in": "query",
            "description": "View used to render incidents",
            "required": false,
            "type": "string",
            "enum": [
              "default",
              "extended"
            ]
          },
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexOKResponseBody"
            },
            "headers": {
              "ETag": {
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified response.",
            "headers": {
              "ETag": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexForbiddenResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "security": [
          {
            "GlobalSession": []
          }
        ]
      }
    },
    "/projects/{project_id}/incidents/{incident_id}": {
      "get": {
        "tags": [
          "Incident"
        ],
        "summary": "Show an incident",
        "description": "Show retrieves the details of an incident.\n\nRequired security scopes:\n  * `governance:incident:show`",
        "operationId": "Incident#show",
        "parameters": [
          {
            "name": "view",
            "in": "query",
            "description": "View used to render incident",
            "required": false,
            "type": "string",
            "enum": [
              "default",
              "extended",
              "source"
            ]
          },
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "incident_id",
            "in": "path",
            "description": "incident_id identifies an incident by ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/IncidentShowOKResponseBody"
            },
            "headers": {
              "ETag": {
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified response.",
            "headers": {
              "ETag": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/IncidentShowBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/IncidentShowUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/IncidentShowForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/IncidentShowNotFoundResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/IncidentShowInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/IncidentShowBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "security": [
          {
            "GlobalSession": []
          }
        ]
      }
    },
    "/projects/{project_id}/incidents/{incident_id}/escalations": {
      "get": {
        "tags": [
          "Incident"
        ],
        "summary": "Index escalations and their statuses for an incident",
        "description": "IndexEscalations retrieves the status details of all of the escalations for an incident.\n\nRequired security scopes:\n  * `governance:incident:index`",
        "operationId": "Incident#index_escalations",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "incident_id",
            "in": "path",
            "description": "incident_id identifies an incident by ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexEscalationsResponseBody"
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexEscalationsBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexEscalationsUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexEscalationsForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexEscalationsNotFoundResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexEscalationsInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexEscalationsBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "security": [
          {
            "GlobalSession": []
          }
        ]
      }
    },
    "/projects/{project_id}/incidents/{incident_id}/resolutions": {
      "get": {
        "tags": [
          "Incident"
        ],
        "summary": "Index resolutions and their statuses for an incident",
        "description": "IndexResolutions retrieves the status details of all of the resolutions for an incident.\n\nRequired security scopes:\n  * `governance:incident:index`",
        "operationId": "Incident#index_resolutions",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "incident_id",
            "in": "path",
            "description": "incident_id identifies an incident by ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexResolutionsResponseBody"
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexResolutionsBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexResolutionsUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexResolutionsForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexResolutionsNotFoundResponseBody"
            }
          },
          "422": {
            "description": "Unprocessable Entity response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexResolutionsUnprocessableEntityResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexResolutionsInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/IncidentIndexResolutionsBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "security": [
          {
            "GlobalSession": []
          }
        ]
      }
    },
    "/projects/{project_id}/incidents/{incident_id}/resolve": {
      "put": {
        "tags": [
          "Incident"
        ],
        "summary": "Resolve an incident",
        "description": "Resolve resolves an incident by setting it to an inactive state, indicating that it has been addressed.\n\nRequired security scopes:\n  * `governance:incident:resolve`",
        "operationId": "Incident#resolve",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "incident_id",
            "in": "path",
            "description": "incident_id identifies an incident by ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/IncidentResolveBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/IncidentResolveUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/IncidentResolveForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/IncidentResolveNotFoundResponseBody"
            }
          },
          "412": {
            "description": "Precondition Failed response.",
            "schema": {
              "$ref": "#/definitions/IncidentResolvePreconditionFailedResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/IncidentResolveInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/IncidentResolveBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "security": [
          {
            "GlobalSession": []
          }
        ]
      }
    },
    "/projects/{project_id}/policy_templates": {
      "get": {
        "tags": [
          "PolicyTemplate"
        ],
        "summary": "Index policy templates",
        "description": "IndexPolicyTemplates retrieves the list of policy templates in a project.\n\nRequired security scopes:\n  * `governance:policy_template:index`",
        "operationId": "PolicyTemplate#index",
        "parameters": [
          {
            "name": "view",
            "in": "query",
            "description": "View used to render policy templates",
            "required": false,
            "type": "string",
            "enum": [
              "default",
              "extended"
            ]
          },
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateIndexOKResponseBody"
            },
            "headers": {
              "ETag": {
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified response.",
            "headers": {
              "ETag": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateIndexBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateIndexUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateIndexForbiddenResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateIndexInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateIndexBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "security": [
          {
            "GlobalSession": []
          }
        ]
      },
      "post": {
        "tags": [
          "PolicyTemplate"
        ],
        "summary": "Upload a policy template",
        "description": "Upload uploads a policy template for a project, first compiling it. On failure, an array of syntax errors will be returned.\n\nRequired security scopes:\n  * `governance:policy_template:upload`",
        "operationId": "PolicyTemplate#upload",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "UploadRequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyTemplateUploadRequestBody",
              "required": [
                "filename",
                "source"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateUploadResponseBody"
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateUploadBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateUploadUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateUploadForbiddenResponseBody"
            }
          },
          "409": {
            "description": "Conflict response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateUploadConflictResponseBody"
            },
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateUploadInvalidTemplateResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateUploadInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateUploadBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "security": [
          {
            "GlobalSession": []
          }
        ]
      }
    },
    "/projects/{project_id}/policy_templates/compile": {
      "post": {
        "tags": [
          "PolicyTemplate"
        ],
        "summary": "Compile a policy template",
        "description": "Compile compiles a policy template for a project. This is only to be used for checking the syntax of a policy template; the results are not stored.\n\nRequired security scopes:\n  * `governance:policy_template:compile`",
        "operationId": "PolicyTemplate#compile",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "CompileRequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyTemplateCompileRequestBody",
              "required": [
                "filename",
                "source"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK response."
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateCompileBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateCompileUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateCompileForbiddenResponseBody"
            }
          },
          "422": {
            "description": "Unprocessable Entity response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateCompileInvalidTemplateResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateCompileInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateCompileBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "security": [
          {
            "GlobalSession": []
          }
        ]
      }
    },
    "/projects/{project_id}/policy_templates/{template_id}": {
      "get": {
        "tags": [
          "PolicyTemplate"
        ],
        "summary": "Show a policy template",
        "description": "Show retrieves the details of a policy template.\n\nRequired security scopes:\n  * `governance:policy_template:show`",
        "operationId": "PolicyTemplate#show",
        "parameters": [
          {
            "name": "view",
            "in": "query",
            "description": "View used to render policy template",
            "required": false,
            "type": "string",
            "enum": [
              "default",
              "extended",
              "source"
            ]
          },
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "template_id",
            "in": "path",
            "description": "template_id identifies a policy template by ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateShowResponseBody"
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateShowBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateShowUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateShowForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateShowNotFoundResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateShowInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateShowBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "security": [
          {
            "GlobalSession": []
          }
        ]
      },
      "put": {
        "tags": [
          "PolicyTemplate"
        ],
        "summary": "Update a policy template",
        "description": "Update updates a policy template in place for a project, by replacing it. Any existing applied policies using the template will not be updated; they must be deleted and recreated again.\n\nRequired security scopes:\n  * `governance:policy_template:update`",
        "operationId": "PolicyTemplate#update",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "template_id",
            "in": "path",
            "description": "template_id identifies a policy template by ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "UpdateRequestBody",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyTemplateUpdateRequestBody",
              "required": [
                "filename",
                "source"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateUpdateResponseBody"
            }
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateUpdateBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateUpdateUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateUpdateForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateUpdateNotFoundResponseBody"
            }
          },
          "422": {
            "description": "Unprocessable Entity response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateUpdateInvalidTemplateResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateUpdateInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateUpdateBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "security": [
          {
            "GlobalSession": []
          }
        ]
      },
      "delete": {
        "tags": [
          "PolicyTemplate"
        ],
        "summary": "Delete a policy template",
        "description": "Delete deletes a policy template from a project. Deleting a policy template will not delete any applied policies created from the template, they must be stopped explicitly.\n\nRequired security scopes:\n  * `governance:policy_template:delete`",
        "operationId": "PolicyTemplate#delete",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "project_id identifies a project by ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "template_id",
            "in": "path",
            "description": "template_id identifies a policy template by ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content response."
          },
          "400": {
            "description": "Bad Request response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateDeleteBadRequestResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateDeleteUnauthorizedResponseBody"
            }
          },
          "403": {
            "description": "Forbidden response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateDeleteForbiddenResponseBody"
            }
          },
          "404": {
            "description": "Not Found response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateDeleteNotFoundResponseBody"
            }
          },
          "500": {
            "description": "Internal Server Error response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateDeleteInternalErrorResponseBody"
            }
          },
          "502": {
            "description": "Bad Gateway response.",
            "schema": {
              "$ref": "#/definitions/PolicyTemplateDeleteBadGatewayResponseBody"
            }
          }
        },
        "schemes": [
          "https"
        ],
        "security": [
          {
            "GlobalSession": []
          }
        ]
      }
    }
  },
  "definitions": {
    "AppliedPolicyCreateBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "CreateBadGatewayResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyCreateBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "CreateBadRequestResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyCreateForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "CreateForbiddenResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyCreateInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "CreateInternalErrorResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyCreateRequestBody": {
      "title": "AppliedPolicyCreateRequestBody",
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "description provides a human readable description for this specific application of the policy.",
          "example": "Delete unattached volumes after 24 hours in US-East."
        },
        "dry_run": {
          "type": "boolean",
          "description": "dry_run is a flag used for testing a policy so that an incident can be raised without performing an action.",
          "default": false,
          "example": false
        },
        "frequency": {
          "type": "string",
          "description": "frequency specifies the frequency with which to run policy evaluations",
          "default": "15 minutes",
          "example": "daily",
          "enum": [
            "15 minutes",
            "hourly",
            "daily",
            "weekly"
          ]
        },
        "name": {
          "type": "string",
          "description": "name provides a name for this specific application of the policy.",
          "example": "us_east_unattached_volumes"
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigurationOptionCreateTypeRequestBody"
          },
          "description": "options list the configuration options used to parameterize the policy.",
          "example": [
            {
              "label": "Cloud Vendor",
              "name": "cloud_vendor",
              "type": "string",
              "value": "AWS"
            },
            {
              "label": "Email Addresses",
              "name": "email_list",
              "type": "list",
              "value": [
                "person1@domain.com",
                "person2@domain.com"
              ]
            }
          ]
        },
        "template_href": {
          "type": "string",
          "description": "template_href is the href of the policy template or published template that is applied.",
          "example": "/api/governance/projects/60073/policy_templates/5b06ead5e0dacc007058c784",
          "pattern": "^/api/governance/(projects/[0-9]+/policy|orgs/[0-9]+/published)_templates/[0-9a-f]+$"
        }
      },
      "example": {
        "description": "Delete unattached volumes after 24 hours in US-East.",
        "dry_run": false,
        "frequency": "daily",
        "name": "us_east_unattached_volumes",
        "options": [
          {
            "label": "Cloud Vendor",
            "name": "cloud_vendor",
            "type": "string",
            "value": "AWS"
          },
          {
            "label": "Email Addresses",
            "name": "email_list",
            "type": "list",
            "value": [
              "person1@domain.com",
              "person2@domain.com"
            ]
          }
        ],
        "template_href": "/api/governance/projects/60073/policy_templates/5b06ead5e0dacc007058c784"
      },
      "required": [
        "name",
        "template_href"
      ]
    },
    "AppliedPolicyCreateResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.applied_policy; view=default",
      "type": "object",
      "properties": {
        "category": {
          "type": "string",
          "description": "category is the type categorization of the applied policy.",
          "example": "tags"
        },
        "created_at": {
          "type": "string",
          "description": "created_at is the applied policy creation timestamp in RFC3339 format.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "created_by": {
          "$ref": "#/definitions/UserResponseBody"
        },
        "description": {
          "type": "string",
          "description": "description provides a human readable description for this specific application of the policy.",
          "example": "Delete unattached volumes after 24 hours in US-East."
        },
        "doc_link": {
          "type": "string",
          "description": "doc_link is a HTTP URI to a page containing detailed documentation for the policy.",
          "example": "https://rightscale.com",
          "format": "uri"
        },
        "dry_run": {
          "type": "boolean",
          "description": "dry_run is a flag used for testing a policy so that an incident can be raised without performing an action.",
          "example": false
        },
        "error": {
          "type": "string",
          "description": "error is the error message returned if the evaluation failed. On success this attribute is empty.",
          "example": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n"
        },
        "errored_at": {
          "type": "string",
          "description": "errored_at is the applied policy error timestamp in RFC3339 format. On success this attribute is empty.",
          "example": "2018-06-12T20:38:02Z",
          "format": "date-time"
        },
        "frequency": {
          "type": "string",
          "description": "frequency specifies the frequency with which to run policy evaluations",
          "example": "daily",
          "enum": [
            "15 minutes",
            "hourly",
            "daily",
            "weekly"
          ]
        },
        "href": {
          "type": "string",
          "description": "href is the href of the applied policy.",
          "example": "/api/governance/projects/60073/applied_policies/abef04b3",
          "pattern": "^/api/governance/projects/[0-9]+/applied_policies/[0-9a-f]+$"
        },
        "id": {
          "type": "string",
          "description": "id identifies an applied policy by ID.",
          "example": "304272"
        },
        "info": {
          "type": "object",
          "description": "info is an arbitrary set of key/value pairs that provide additional information such as the policy author, support contact information, etc.",
          "example": {
            "author": "RightScale",
            "support": "support@rightscale.com"
          },
          "additionalProperties": true
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#applied_policy\".",
          "example": "gov#applied_policy",
          "enum": [
            "gov#applied_policy"
          ]
        },
        "name": {
          "type": "string",
          "description": "name provides a name for this specific application of the policy.",
          "example": "us_east_unattached_volumes"
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigurationOptionResponseBody"
          },
          "description": "options list the configuration options used to parameterize the policy.",
          "example": [
            {
              "label": "Cloud Vendor",
              "name": "cloud_vendor",
              "type": "string",
              "value": "AWS"
            },
            {
              "label": "Email Addresses",
              "name": "email_list",
              "type": "list",
              "value": [
                "person1@domain.com",
                "person2@domain.com"
              ]
            }
          ]
        },
        "policy_template": {
          "$ref": "#/definitions/PolicyTemplateResponseBodyLink"
        },
        "project": {
          "$ref": "#/definitions/ProjectResponseBody"
        },
        "published_template": {
          "$ref": "#/definitions/PublishedTemplateResponseBodyLink"
        },
        "severity": {
          "type": "string",
          "description": "severity defines the severity level of incidents raised from this applied policy.",
          "example": "low",
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ]
        },
        "status": {
          "type": "string",
          "description": "status is used to identify the current status of the applied policy.",
          "example": "active",
          "enum": [
            "active",
            "error"
          ]
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at is the applied policy update timestamp in RFC3339 format.",
          "example": "2018-06-12T22:31:02Z",
          "format": "date-time"
        }
      },
      "description": "CreateResponseBody result type (default view)",
      "example": {
        "category": "tags",
        "created_at": "2018-06-12T20:31:02Z",
        "created_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        },
        "description": "Delete unattached volumes after 24 hours in US-East.",
        "doc_link": "https://rightscale.com",
        "dry_run": false,
        "error": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n",
        "errored_at": "2018-06-12T20:38:02Z",
        "frequency": "daily",
        "href": "/api/governance/projects/60073/applied_policies/abef04b3",
        "id": "304272",
        "info": {
          "author": "RightScale",
          "support": "support@rightscale.com"
        },
        "kind": "gov#applied_policy",
        "name": "us_east_unattached_volumes",
        "options": [
          {
            "label": "Cloud Vendor",
            "name": "cloud_vendor",
            "type": "string",
            "value": "AWS"
          },
          {
            "label": "Email Addresses",
            "name": "email_list",
            "type": "list",
            "value": [
              "person1@domain.com",
              "person2@domain.com"
            ]
          }
        ],
        "policy_template": {
          "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
          "href": "/api/governance/projects/60073/policy_templates/a88e0d89",
          "id": "324802",
          "kind": "gov#policy_template",
          "name": "unattached_volumes",
          "updated_at": "2018-06-12T20:51:02Z",
          "updated_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          }
        },
        "project": {
          "id": 60073,
          "name": "RightScale Test Account",
          "org_id": 1105,
          "org_name": "RightScale QA"
        },
        "published_template": {
          "built_in": false,
          "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
          "href": "/api/governance/orgs/48673/published_templates/59",
          "id": "Eligendi dolore illum distinctio.",
          "kind": "gov#published_template",
          "name": "unattached_volumes",
          "updated_at": "2018-06-12T20:51:02Z",
          "updated_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          }
        },
        "severity": "low",
        "status": "active",
        "updated_at": "2018-06-12T22:31:02Z"
      },
      "required": [
        "id",
        "name",
        "href",
        "kind"
      ]
    },
    "AppliedPolicyCreateUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "CreateUnauthorizedResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyCreateUnprocessableEntityResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "CreateUnprocessableEntityResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyDeleteBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "DeleteBadGatewayResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyDeleteBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "DeleteBadRequestResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyDeleteForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "DeleteForbiddenResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyDeleteInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "DeleteInternalErrorResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyDeleteNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "DeleteNotFoundResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyDeleteUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "DeleteUnauthorizedResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyEvaluateBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "EvaluateBadGatewayResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyEvaluateBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "EvaluateBadRequestResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyEvaluateForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "EvaluateForbiddenResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyEvaluateInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "EvaluateInternalErrorResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyEvaluateNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "EvaluateNotFoundResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyEvaluateUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "EvaluateUnauthorizedResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyIndexBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "IndexBadGatewayResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyIndexBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "IndexBadRequestResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyIndexForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "IndexForbiddenResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyIndexInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "IndexInternalErrorResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyIndexOKResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.applied_policy_list; view=default",
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "count is the number of applied policies in the list.",
          "example": 20,
          "format": "int64"
        },
        "items": {
          "$ref": "#/definitions/AppliedPolicyResponseBodyCollection"
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#applied_policy_list\".",
          "example": "gov#applied_policy_list",
          "enum": [
            "gov#applied_policy_list"
          ]
        },
        "not_modified": {
          "type": "string",
          "description": "not_modified is a flag used internally that indicates how to encode the HTTP response (i.e. 200 or 304).",
          "example": "false",
          "enum": [
            "true",
            "false"
          ]
        }
      },
      "description": "IndexOKResponseBody result type (default view)",
      "example": {
        "count": 20,
        "items": [
          {
            "category": "tags",
            "created_at": "2018-06-12T20:31:02Z",
            "created_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "description": "Delete unattached volumes after 24 hours in US-East.",
            "doc_link": "https://rightscale.com",
            "dry_run": false,
            "error": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n",
            "errored_at": "2018-06-12T20:38:02Z",
            "frequency": "daily",
            "href": "/api/governance/projects/60073/applied_policies/abef04b3",
            "id": "304272",
            "info": {
              "author": "RightScale",
              "support": "support@rightscale.com"
            },
            "kind": "gov#applied_policy",
            "name": "us_east_unattached_volumes",
            "options": [
              {
                "label": "Cloud Vendor",
                "name": "cloud_vendor",
                "type": "string",
                "value": "AWS"
              },
              {
                "label": "Email Addresses",
                "name": "email_list",
                "type": "list",
                "value": [
                  "person1@domain.com",
                  "person2@domain.com"
                ]
              }
            ],
            "policy_template": {
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/projects/60073/policy_templates/a88e0d89",
              "id": "324802",
              "kind": "gov#policy_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            },
            "project": {
              "id": 60073,
              "name": "RightScale Test Account",
              "org_id": 1105,
              "org_name": "RightScale QA"
            },
            "published_template": {
              "built_in": false,
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/orgs/48673/published_templates/59",
              "id": "Eligendi dolore illum distinctio.",
              "kind": "gov#published_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            },
            "severity": "low",
            "status": "active",
            "updated_at": "2018-06-12T22:31:02Z"
          },
          {
            "category": "tags",
            "created_at": "2018-06-12T20:31:02Z",
            "created_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "description": "Delete unattached volumes after 24 hours in US-East.",
            "doc_link": "https://rightscale.com",
            "dry_run": false,
            "error": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n",
            "errored_at": "2018-06-12T20:38:02Z",
            "frequency": "daily",
            "href": "/api/governance/projects/60073/applied_policies/abef04b3",
            "id": "304272",
            "info": {
              "author": "RightScale",
              "support": "support@rightscale.com"
            },
            "kind": "gov#applied_policy",
            "name": "us_east_unattached_volumes",
            "options": [
              {
                "label": "Cloud Vendor",
                "name": "cloud_vendor",
                "type": "string",
                "value": "AWS"
              },
              {
                "label": "Email Addresses",
                "name": "email_list",
                "type": "list",
                "value": [
                  "person1@domain.com",
                  "person2@domain.com"
                ]
              }
            ],
            "policy_template": {
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/projects/60073/policy_templates/a88e0d89",
              "id": "324802",
              "kind": "gov#policy_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            },
            "project": {
              "id": 60073,
              "name": "RightScale Test Account",
              "org_id": 1105,
              "org_name": "RightScale QA"
            },
            "published_template": {
              "built_in": false,
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/orgs/48673/published_templates/59",
              "id": "Eligendi dolore illum distinctio.",
              "kind": "gov#published_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            },
            "severity": "low",
            "status": "active",
            "updated_at": "2018-06-12T22:31:02Z"
          },
          {
            "category": "tags",
            "created_at": "2018-06-12T20:31:02Z",
            "created_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "description": "Delete unattached volumes after 24 hours in US-East.",
            "doc_link": "https://rightscale.com",
            "dry_run": false,
            "error": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n",
            "errored_at": "2018-06-12T20:38:02Z",
            "frequency": "daily",
            "href": "/api/governance/projects/60073/applied_policies/abef04b3",
            "id": "304272",
            "info": {
              "author": "RightScale",
              "support": "support@rightscale.com"
            },
            "kind": "gov#applied_policy",
            "name": "us_east_unattached_volumes",
            "options": [
              {
                "label": "Cloud Vendor",
                "name": "cloud_vendor",
                "type": "string",
                "value": "AWS"
              },
              {
                "label": "Email Addresses",
                "name": "email_list",
                "type": "list",
                "value": [
                  "person1@domain.com",
                  "person2@domain.com"
                ]
              }
            ],
            "policy_template": {
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/projects/60073/policy_templates/a88e0d89",
              "id": "324802",
              "kind": "gov#policy_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            },
            "project": {
              "id": 60073,
              "name": "RightScale Test Account",
              "org_id": 1105,
              "org_name": "RightScale QA"
            },
            "published_template": {
              "built_in": false,
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/orgs/48673/published_templates/59",
              "id": "Eligendi dolore illum distinctio.",
              "kind": "gov#published_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            },
            "severity": "low",
            "status": "active",
            "updated_at": "2018-06-12T22:31:02Z"
          },
          {
            "category": "tags",
            "created_at": "2018-06-12T20:31:02Z",
            "created_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "description": "Delete unattached volumes after 24 hours in US-East.",
            "doc_link": "https://rightscale.com",
            "dry_run": false,
            "error": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n",
            "errored_at": "2018-06-12T20:38:02Z",
            "frequency": "daily",
            "href": "/api/governance/projects/60073/applied_policies/abef04b3",
            "id": "304272",
            "info": {
              "author": "RightScale",
              "support": "support@rightscale.com"
            },
            "kind": "gov#applied_policy",
            "name": "us_east_unattached_volumes",
            "options": [
              {
                "label": "Cloud Vendor",
                "name": "cloud_vendor",
                "type": "string",
                "value": "AWS"
              },
              {
                "label": "Email Addresses",
                "name": "email_list",
                "type": "list",
                "value": [
                  "person1@domain.com",
                  "person2@domain.com"
                ]
              }
            ],
            "policy_template": {
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/projects/60073/policy_templates/a88e0d89",
              "id": "324802",
              "kind": "gov#policy_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            },
            "project": {
              "id": 60073,
              "name": "RightScale Test Account",
              "org_id": 1105,
              "org_name": "RightScale QA"
            },
            "published_template": {
              "built_in": false,
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/orgs/48673/published_templates/59",
              "id": "Eligendi dolore illum distinctio.",
              "kind": "gov#published_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            },
            "severity": "low",
            "status": "active",
            "updated_at": "2018-06-12T22:31:02Z"
          }
        ],
        "kind": "gov#applied_policy_list",
        "not_modified": "false"
      },
      "required": [
        "kind"
      ]
    },
    "AppliedPolicyIndexUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "IndexUnauthorizedResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.applied_policy; view=default",
      "type": "object",
      "properties": {
        "category": {
          "type": "string",
          "description": "category is the type categorization of the applied policy.",
          "example": "tags"
        },
        "created_at": {
          "type": "string",
          "description": "created_at is the applied policy creation timestamp in RFC3339 format.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "created_by": {
          "$ref": "#/definitions/UserResponseBody"
        },
        "description": {
          "type": "string",
          "description": "description provides a human readable description for this specific application of the policy.",
          "example": "Delete unattached volumes after 24 hours in US-East."
        },
        "doc_link": {
          "type": "string",
          "description": "doc_link is a HTTP URI to a page containing detailed documentation for the policy.",
          "example": "https://rightscale.com",
          "format": "uri"
        },
        "dry_run": {
          "type": "boolean",
          "description": "dry_run is a flag used for testing a policy so that an incident can be raised without performing an action.",
          "example": false
        },
        "error": {
          "type": "string",
          "description": "error is the error message returned if the evaluation failed. On success this attribute is empty.",
          "example": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n"
        },
        "errored_at": {
          "type": "string",
          "description": "errored_at is the applied policy error timestamp in RFC3339 format. On success this attribute is empty.",
          "example": "2018-06-12T20:38:02Z",
          "format": "date-time"
        },
        "frequency": {
          "type": "string",
          "description": "frequency specifies the frequency with which to run policy evaluations",
          "example": "daily",
          "enum": [
            "15 minutes",
            "hourly",
            "daily",
            "weekly"
          ]
        },
        "href": {
          "type": "string",
          "description": "href is the href of the applied policy.",
          "example": "/api/governance/projects/60073/applied_policies/abef04b3",
          "pattern": "^/api/governance/projects/[0-9]+/applied_policies/[0-9a-f]+$"
        },
        "id": {
          "type": "string",
          "description": "id identifies an applied policy by ID.",
          "example": "304272"
        },
        "info": {
          "type": "object",
          "description": "info is an arbitrary set of key/value pairs that provide additional information such as the policy author, support contact information, etc.",
          "example": {
            "author": "RightScale",
            "support": "support@rightscale.com"
          },
          "additionalProperties": true
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#applied_policy\".",
          "example": "gov#applied_policy",
          "enum": [
            "gov#applied_policy"
          ]
        },
        "name": {
          "type": "string",
          "description": "name provides a name for this specific application of the policy.",
          "example": "us_east_unattached_volumes"
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigurationOptionResponseBody"
          },
          "description": "options list the configuration options used to parameterize the policy.",
          "example": [
            {
              "label": "Cloud Vendor",
              "name": "cloud_vendor",
              "type": "string",
              "value": "AWS"
            },
            {
              "label": "Email Addresses",
              "name": "email_list",
              "type": "list",
              "value": [
                "person1@domain.com",
                "person2@domain.com"
              ]
            }
          ]
        },
        "policy_template": {
          "$ref": "#/definitions/PolicyTemplateResponseBodyLink"
        },
        "project": {
          "$ref": "#/definitions/ProjectResponseBody"
        },
        "published_template": {
          "$ref": "#/definitions/PublishedTemplateResponseBodyLink"
        },
        "severity": {
          "type": "string",
          "description": "severity defines the severity level of incidents raised from this applied policy.",
          "example": "low",
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ]
        },
        "status": {
          "type": "string",
          "description": "status is used to identify the current status of the applied policy.",
          "example": "active",
          "enum": [
            "active",
            "error"
          ]
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at is the applied policy update timestamp in RFC3339 format.",
          "example": "2018-06-12T22:31:02Z",
          "format": "date-time"
        }
      },
      "description": "AppliedPolicy describes a policy that is currently applied. (default view)",
      "example": {
        "category": "tags",
        "created_at": "2018-06-12T20:31:02Z",
        "created_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        },
        "description": "Delete unattached volumes after 24 hours in US-East.",
        "doc_link": "https://rightscale.com",
        "dry_run": false,
        "error": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n",
        "errored_at": "2018-06-12T20:38:02Z",
        "frequency": "daily",
        "href": "/api/governance/projects/60073/applied_policies/abef04b3",
        "id": "304272",
        "info": {
          "author": "RightScale",
          "support": "support@rightscale.com"
        },
        "kind": "gov#applied_policy",
        "name": "us_east_unattached_volumes",
        "options": [
          {
            "label": "Cloud Vendor",
            "name": "cloud_vendor",
            "type": "string",
            "value": "AWS"
          },
          {
            "label": "Email Addresses",
            "name": "email_list",
            "type": "list",
            "value": [
              "person1@domain.com",
              "person2@domain.com"
            ]
          }
        ],
        "policy_template": {
          "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
          "href": "/api/governance/projects/60073/policy_templates/a88e0d89",
          "id": "324802",
          "kind": "gov#policy_template",
          "name": "unattached_volumes",
          "updated_at": "2018-06-12T20:51:02Z",
          "updated_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          }
        },
        "project": {
          "id": 60073,
          "name": "RightScale Test Account",
          "org_id": 1105,
          "org_name": "RightScale QA"
        },
        "published_template": {
          "built_in": false,
          "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
          "href": "/api/governance/orgs/48673/published_templates/59",
          "id": "Eligendi dolore illum distinctio.",
          "kind": "gov#published_template",
          "name": "unattached_volumes",
          "updated_at": "2018-06-12T20:51:02Z",
          "updated_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          }
        },
        "severity": "low",
        "status": "active",
        "updated_at": "2018-06-12T22:31:02Z"
      },
      "required": [
        "id",
        "name",
        "href",
        "kind"
      ]
    },
    "AppliedPolicyResponseBodyCollection": {
      "title": "Mediatype identifier: application/vnd.rightscale.applied_policy; type=collection; view=default",
      "type": "array",
      "items": {
        "$ref": "#/definitions/AppliedPolicyResponseBody"
      },
      "description": "AppliedPolicyCollectionResponseBody is the result type for an array of AppliedPolicyResponseBody (default view)",
      "example": [
        {
          "category": "tags",
          "created_at": "2018-06-12T20:31:02Z",
          "created_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "description": "Delete unattached volumes after 24 hours in US-East.",
          "doc_link": "https://rightscale.com",
          "dry_run": false,
          "error": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n",
          "errored_at": "2018-06-12T20:38:02Z",
          "frequency": "daily",
          "href": "/api/governance/projects/60073/applied_policies/abef04b3",
          "id": "304272",
          "info": {
            "author": "RightScale",
            "support": "support@rightscale.com"
          },
          "kind": "gov#applied_policy",
          "name": "us_east_unattached_volumes",
          "options": [
            {
              "label": "Cloud Vendor",
              "name": "cloud_vendor",
              "type": "string",
              "value": "AWS"
            },
            {
              "label": "Email Addresses",
              "name": "email_list",
              "type": "list",
              "value": [
                "person1@domain.com",
                "person2@domain.com"
              ]
            }
          ],
          "policy_template": {
            "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
            "href": "/api/governance/projects/60073/policy_templates/a88e0d89",
            "id": "324802",
            "kind": "gov#policy_template",
            "name": "unattached_volumes",
            "updated_at": "2018-06-12T20:51:02Z",
            "updated_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            }
          },
          "project": {
            "id": 60073,
            "name": "RightScale Test Account",
            "org_id": 1105,
            "org_name": "RightScale QA"
          },
          "published_template": {
            "built_in": false,
            "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
            "href": "/api/governance/orgs/48673/published_templates/59",
            "id": "Eligendi dolore illum distinctio.",
            "kind": "gov#published_template",
            "name": "unattached_volumes",
            "updated_at": "2018-06-12T20:51:02Z",
            "updated_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            }
          },
          "severity": "low",
          "status": "active",
          "updated_at": "2018-06-12T22:31:02Z"
        },
        {
          "category": "tags",
          "created_at": "2018-06-12T20:31:02Z",
          "created_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "description": "Delete unattached volumes after 24 hours in US-East.",
          "doc_link": "https://rightscale.com",
          "dry_run": false,
          "error": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n",
          "errored_at": "2018-06-12T20:38:02Z",
          "frequency": "daily",
          "href": "/api/governance/projects/60073/applied_policies/abef04b3",
          "id": "304272",
          "info": {
            "author": "RightScale",
            "support": "support@rightscale.com"
          },
          "kind": "gov#applied_policy",
          "name": "us_east_unattached_volumes",
          "options": [
            {
              "label": "Cloud Vendor",
              "name": "cloud_vendor",
              "type": "string",
              "value": "AWS"
            },
            {
              "label": "Email Addresses",
              "name": "email_list",
              "type": "list",
              "value": [
                "person1@domain.com",
                "person2@domain.com"
              ]
            }
          ],
          "policy_template": {
            "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
            "href": "/api/governance/projects/60073/policy_templates/a88e0d89",
            "id": "324802",
            "kind": "gov#policy_template",
            "name": "unattached_volumes",
            "updated_at": "2018-06-12T20:51:02Z",
            "updated_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            }
          },
          "project": {
            "id": 60073,
            "name": "RightScale Test Account",
            "org_id": 1105,
            "org_name": "RightScale QA"
          },
          "published_template": {
            "built_in": false,
            "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
            "href": "/api/governance/orgs/48673/published_templates/59",
            "id": "Eligendi dolore illum distinctio.",
            "kind": "gov#published_template",
            "name": "unattached_volumes",
            "updated_at": "2018-06-12T20:51:02Z",
            "updated_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            }
          },
          "severity": "low",
          "status": "active",
          "updated_at": "2018-06-12T22:31:02Z"
        }
      ]
    },
    "AppliedPolicyResponseBodyLink": {
      "title": "Mediatype identifier: application/vnd.rightscale.applied_policy; view=default",
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "description": "created_at is the applied policy creation timestamp in RFC3339 format.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "created_by": {
          "$ref": "#/definitions/UserResponseBody"
        },
        "frequency": {
          "type": "string",
          "description": "frequency specifies the frequency with which to run policy evaluations",
          "example": "daily",
          "enum": [
            "15 minutes",
            "hourly",
            "daily",
            "weekly"
          ]
        },
        "href": {
          "type": "string",
          "description": "href is the href of the applied policy.",
          "example": "/api/governance/projects/60073/applied_policies/abef04b3",
          "pattern": "^/api/governance/projects/[0-9]+/applied_policies/[0-9a-f]+$"
        },
        "id": {
          "type": "string",
          "description": "id identifies an applied policy by ID.",
          "example": "304272"
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#applied_policy\".",
          "example": "gov#applied_policy",
          "enum": [
            "gov#applied_policy"
          ]
        },
        "name": {
          "type": "string",
          "description": "name provides a name for this specific application of the policy.",
          "example": "us_east_unattached_volumes"
        },
        "policy_template": {
          "$ref": "#/definitions/PolicyTemplateResponseBodyLink"
        },
        "published_template": {
          "$ref": "#/definitions/PublishedTemplateResponseBodyLink"
        }
      },
      "description": "AppliedPolicy describes a policy that is currently applied. (default view)",
      "example": {
        "created_at": "2018-06-12T20:31:02Z",
        "created_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        },
        "frequency": "daily",
        "href": "/api/governance/projects/60073/applied_policies/abef04b3",
        "id": "304272",
        "kind": "gov#applied_policy",
        "name": "us_east_unattached_volumes",
        "policy_template": {
          "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
          "href": "/api/governance/projects/60073/policy_templates/a88e0d89",
          "id": "324802",
          "kind": "gov#policy_template",
          "name": "unattached_volumes",
          "updated_at": "2018-06-12T20:51:02Z",
          "updated_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          }
        },
        "published_template": {
          "built_in": false,
          "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
          "href": "/api/governance/orgs/48673/published_templates/59",
          "id": "Eligendi dolore illum distinctio.",
          "kind": "gov#published_template",
          "name": "unattached_volumes",
          "updated_at": "2018-06-12T20:51:02Z",
          "updated_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          }
        }
      },
      "required": [
        "id",
        "name",
        "href",
        "kind"
      ]
    },
    "AppliedPolicyShowBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "ShowBadGatewayResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyShowBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "ShowBadRequestResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyShowForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "ShowForbiddenResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyShowInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "ShowInternalErrorResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyShowLogBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "ShowLogBadGatewayResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyShowLogBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "ShowLogBadRequestResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyShowLogForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "ShowLogForbiddenResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyShowLogInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "ShowLogInternalErrorResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyShowLogNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "ShowLogNotFoundResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyShowLogOKResponseBody": {
      "title": "Mediatype identifier: text/markdown; view=default",
      "type": "object",
      "properties": {
        "Response Body": {
          "type": "string",
          "description": "The response body is the log from the last policy evaluation. *The content type is \"text/markdown\"*.",
          "example": "Policy \"filter_check\" evaluation started..."
        }
      },
      "description": "ShowLogOKResponseBody result type (default view)",
      "example": {
        "Response Body": "Policy \"filter_check\" evaluation started..."
      }
    },
    "AppliedPolicyShowLogUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "ShowLogUnauthorizedResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyShowNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "ShowNotFoundResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyShowResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.applied_policy; view=default",
      "type": "object",
      "properties": {
        "category": {
          "type": "string",
          "description": "category is the type categorization of the applied policy.",
          "example": "tags"
        },
        "created_at": {
          "type": "string",
          "description": "created_at is the applied policy creation timestamp in RFC3339 format.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "created_by": {
          "$ref": "#/definitions/UserResponseBody"
        },
        "description": {
          "type": "string",
          "description": "description provides a human readable description for this specific application of the policy.",
          "example": "Delete unattached volumes after 24 hours in US-East."
        },
        "doc_link": {
          "type": "string",
          "description": "doc_link is a HTTP URI to a page containing detailed documentation for the policy.",
          "example": "https://rightscale.com",
          "format": "uri"
        },
        "dry_run": {
          "type": "boolean",
          "description": "dry_run is a flag used for testing a policy so that an incident can be raised without performing an action.",
          "example": false
        },
        "error": {
          "type": "string",
          "description": "error is the error message returned if the evaluation failed. On success this attribute is empty.",
          "example": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n"
        },
        "errored_at": {
          "type": "string",
          "description": "errored_at is the applied policy error timestamp in RFC3339 format. On success this attribute is empty.",
          "example": "2018-06-12T20:38:02Z",
          "format": "date-time"
        },
        "frequency": {
          "type": "string",
          "description": "frequency specifies the frequency with which to run policy evaluations",
          "example": "daily",
          "enum": [
            "15 minutes",
            "hourly",
            "daily",
            "weekly"
          ]
        },
        "href": {
          "type": "string",
          "description": "href is the href of the applied policy.",
          "example": "/api/governance/projects/60073/applied_policies/abef04b3",
          "pattern": "^/api/governance/projects/[0-9]+/applied_policies/[0-9a-f]+$"
        },
        "id": {
          "type": "string",
          "description": "id identifies an applied policy by ID.",
          "example": "304272"
        },
        "info": {
          "type": "object",
          "description": "info is an arbitrary set of key/value pairs that provide additional information such as the policy author, support contact information, etc.",
          "example": {
            "author": "RightScale",
            "support": "support@rightscale.com"
          },
          "additionalProperties": true
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#applied_policy\".",
          "example": "gov#applied_policy",
          "enum": [
            "gov#applied_policy"
          ]
        },
        "name": {
          "type": "string",
          "description": "name provides a name for this specific application of the policy.",
          "example": "us_east_unattached_volumes"
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigurationOptionResponseBody"
          },
          "description": "options list the configuration options used to parameterize the policy.",
          "example": [
            {
              "label": "Cloud Vendor",
              "name": "cloud_vendor",
              "type": "string",
              "value": "AWS"
            },
            {
              "label": "Email Addresses",
              "name": "email_list",
              "type": "list",
              "value": [
                "person1@domain.com",
                "person2@domain.com"
              ]
            }
          ]
        },
        "policy_template": {
          "$ref": "#/definitions/PolicyTemplateResponseBodyLink"
        },
        "project": {
          "$ref": "#/definitions/ProjectResponseBody"
        },
        "published_template": {
          "$ref": "#/definitions/PublishedTemplateResponseBodyLink"
        },
        "severity": {
          "type": "string",
          "description": "severity defines the severity level of incidents raised from this applied policy.",
          "example": "low",
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ]
        },
        "status": {
          "type": "string",
          "description": "status is used to identify the current status of the applied policy.",
          "example": "active",
          "enum": [
            "active",
            "error"
          ]
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at is the applied policy update timestamp in RFC3339 format.",
          "example": "2018-06-12T22:31:02Z",
          "format": "date-time"
        }
      },
      "description": "ShowResponseBody result type (default view)",
      "example": {
        "category": "tags",
        "created_at": "2018-06-12T20:31:02Z",
        "created_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        },
        "description": "Delete unattached volumes after 24 hours in US-East.",
        "doc_link": "https://rightscale.com",
        "dry_run": false,
        "error": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n",
        "errored_at": "2018-06-12T20:38:02Z",
        "frequency": "daily",
        "href": "/api/governance/projects/60073/applied_policies/abef04b3",
        "id": "304272",
        "info": {
          "author": "RightScale",
          "support": "support@rightscale.com"
        },
        "kind": "gov#applied_policy",
        "name": "us_east_unattached_volumes",
        "options": [
          {
            "label": "Cloud Vendor",
            "name": "cloud_vendor",
            "type": "string",
            "value": "AWS"
          },
          {
            "label": "Email Addresses",
            "name": "email_list",
            "type": "list",
            "value": [
              "person1@domain.com",
              "person2@domain.com"
            ]
          }
        ],
        "policy_template": {
          "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
          "href": "/api/governance/projects/60073/policy_templates/a88e0d89",
          "id": "324802",
          "kind": "gov#policy_template",
          "name": "unattached_volumes",
          "updated_at": "2018-06-12T20:51:02Z",
          "updated_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          }
        },
        "project": {
          "id": 60073,
          "name": "RightScale Test Account",
          "org_id": 1105,
          "org_name": "RightScale QA"
        },
        "published_template": {
          "built_in": false,
          "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
          "href": "/api/governance/orgs/48673/published_templates/59",
          "id": "Eligendi dolore illum distinctio.",
          "kind": "gov#published_template",
          "name": "unattached_volumes",
          "updated_at": "2018-06-12T20:51:02Z",
          "updated_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          }
        },
        "severity": "low",
        "status": "active",
        "updated_at": "2018-06-12T22:31:02Z"
      },
      "required": [
        "id",
        "name",
        "href",
        "kind"
      ]
    },
    "AppliedPolicyShowStatusBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "ShowStatusBadGatewayResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyShowStatusBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "ShowStatusBadRequestResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyShowStatusForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "ShowStatusForbiddenResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyShowStatusInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "ShowStatusInternalErrorResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyShowStatusNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "ShowStatusNotFoundResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyShowStatusResponseBody": {
      "title": "Mediatype identifier: application.vnd/rightscale.applied_policy_status; view=default",
      "type": "object",
      "properties": {
        "evaluation_error": {
          "type": "string",
          "description": "evaluation_error is the error message returned if the evaluation failed. On success this attribute is empty.",
          "example": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n"
        },
        "evaluation_errored_at": {
          "type": "string",
          "description": "evaluation_errored_at is the timestamp of the last evaluation error.",
          "example": "2018-07-30T00:09:41Z",
          "format": "date-time"
        },
        "last_evaluation_finish": {
          "type": "string",
          "description": "last_evaluation_finish is the timestamp of the finish of the last policy evaluation. It is omitted if the policy is currently evaluating.",
          "example": "2018-07-30T00:09:41Z",
          "format": "date-time"
        },
        "last_evaluation_start": {
          "type": "string",
          "description": "last_evaluation_start is the timestamp of the start of the last policy evaluation.",
          "example": "2018-07-30T00:09:39Z",
          "format": "date-time"
        },
        "next_evaluation_start": {
          "type": "string",
          "description": "next_evaluation_start is the timestamp of the next expected policy evaluation start. It is omitted if the policy is currently evalutating.",
          "example": "2018-07-30T00:09:56Z",
          "format": "date-time"
        }
      },
      "description": "ShowStatusResponseBody result type (default view)",
      "example": {
        "evaluation_error": "Message:\n  val: invalid first argument: argument must be an object, got: array\nLocation:\n  function \"logic_or\"\n    argument #1\n      function \"eq\"\n        argument #1\n          function \"val\"\n",
        "evaluation_errored_at": "2018-07-30T00:09:41Z",
        "last_evaluation_finish": "2018-07-30T00:09:41Z",
        "last_evaluation_start": "2018-07-30T00:09:39Z",
        "next_evaluation_start": "2018-07-30T00:09:56Z"
      }
    },
    "AppliedPolicyShowStatusUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "ShowStatusUnauthorizedResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "AppliedPolicyShowUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "ShowUnauthorizedResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "CompilationErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.compilation_error; view=default",
      "type": "object",
      "properties": {
        "origin": {
          "type": "string",
          "description": "origin includes the template name and line number which generated the error.",
          "example": "template: template.policy, line: 3"
        },
        "problem": {
          "type": "string",
          "description": "problem is the kind of error.",
          "example": "Undefined variable or method"
        },
        "resolution": {
          "type": "string",
          "description": "resolutions indicates how to resolve the error.",
          "example": "Define 'foo'"
        },
        "summary": {
          "type": "string",
          "description": "summary includes detailed error information.",
          "example": "'foo' is undefined"
        }
      },
      "description": "CompilationError is a single compilation error.",
      "example": {
        "origin": "template: template.policy, line: 3",
        "problem": "Undefined variable or method",
        "resolution": "Define 'foo'",
        "summary": "'foo' is undefined"
      },
      "required": [
        "origin",
        "problem",
        "summary",
        "resolution"
      ]
    },
    "ConfigurationOptionCreateTypeRequestBody": {
      "title": "ConfigurationOptionCreateTypeRequestBody",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "name of option",
          "example": "cloud"
        },
        "value": {
          "description": "value of option",
          "example": "AWS"
        }
      },
      "description": "ConfigurationOptionCreateType is the payload for creating a single parameter value used to configure an applied policy.",
      "example": {
        "name": "cloud",
        "value": "AWS"
      },
      "required": [
        "name",
        "value"
      ]
    },
    "ConfigurationOptionResponseBody": {
      "title": "ConfigurationOptionResponseBody",
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "description": "label of option",
          "example": "Cloud Vendor"
        },
        "name": {
          "type": "string",
          "description": "name of option",
          "example": "cloud"
        },
        "type": {
          "type": "string",
          "description": "type of option",
          "example": "number",
          "enum": [
            "string",
            "number",
            "list"
          ]
        },
        "value": {
          "description": "value of option",
          "example": "AWS"
        }
      },
      "description": "ConfigurationOption describes a single parameter value used to configure an applied policy.",
      "example": {
        "label": "Cloud Vendor",
        "name": "cloud",
        "type": "number",
        "value": "AWS"
      },
      "required": [
        "name",
        "label",
        "type",
        "value"
      ]
    },
    "CreateResponseBody": {
      "title": "CreateResponseBody",
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "example": "Repellendus enim sint distinctio."
        }
      },
      "example": {
        "location": "Debitis commodi aut incidunt."
      },
      "required": [
        "location"
      ]
    },
    "EscalationActionResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.escalation_action; view=default",
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "description": "error is any error occurred when handling the action.",
          "example": "failed to create cloud workflow process: definition foo not found"
        },
        "finished_at": {
          "type": "string",
          "description": "finished_at is the time when the action was finished.",
          "example": "2018-06-12T22:31:02Z",
          "format": "date-time"
        },
        "started_at": {
          "type": "string",
          "description": "started_at is the time when the action was started.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "status is the status of the action.",
          "example": "running",
          "enum": [
            "queued",
            "running",
            "completed",
            "failed"
          ]
        },
        "type": {
          "type": "string",
          "description": "type is the type of the action.",
          "example": "email",
          "enum": [
            "email",
            "cloud_workflow"
          ]
        }
      },
      "description": "EscalationAction holds the status of a single action in an escalation.",
      "example": {
        "error": "failed to create cloud workflow process: definition foo not found",
        "finished_at": "2018-06-12T22:31:02Z",
        "started_at": "2018-06-12T20:31:02Z",
        "status": "running",
        "type": "email"
      },
      "required": [
        "type",
        "status"
      ]
    },
    "EscalationResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.escalation; view=default",
      "type": "object",
      "properties": {
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EscalationActionResponseBody"
          },
          "description": "actions is the list of individual actions.",
          "example": [
            {
              "error": "failed to create cloud workflow process: definition foo not found",
              "finished_at": "2018-06-12T22:31:02Z",
              "started_at": "2018-06-12T20:31:02Z",
              "status": "running",
              "type": "email"
            },
            {
              "error": "failed to create cloud workflow process: definition foo not found",
              "finished_at": "2018-06-12T22:31:02Z",
              "started_at": "2018-06-12T20:31:02Z",
              "status": "running",
              "type": "email"
            },
            {
              "error": "failed to create cloud workflow process: definition foo not found",
              "finished_at": "2018-06-12T22:31:02Z",
              "started_at": "2018-06-12T20:31:02Z",
              "status": "running",
              "type": "email"
            },
            {
              "error": "failed to create cloud workflow process: definition foo not found",
              "finished_at": "2018-06-12T22:31:02Z",
              "started_at": "2018-06-12T20:31:02Z",
              "status": "running",
              "type": "email"
            }
          ]
        },
        "name": {
          "type": "string",
          "description": "name is the name of the escalation.",
          "example": "send_email"
        },
        "status": {
          "type": "string",
          "description": "status is the status of the set of escalation actions.",
          "example": "running",
          "enum": [
            "queued",
            "aborted",
            "running",
            "completed",
            "failed"
          ]
        }
      },
      "description": "Escalation holds the status of one or more actions of an escalation.",
      "example": {
        "actions": [
          {
            "error": "failed to create cloud workflow process: definition foo not found",
            "finished_at": "2018-06-12T22:31:02Z",
            "started_at": "2018-06-12T20:31:02Z",
            "status": "running",
            "type": "email"
          },
          {
            "error": "failed to create cloud workflow process: definition foo not found",
            "finished_at": "2018-06-12T22:31:02Z",
            "started_at": "2018-06-12T20:31:02Z",
            "status": "running",
            "type": "email"
          }
        ],
        "name": "send_email",
        "status": "running"
      },
      "required": [
        "status",
        "name",
        "actions"
      ]
    },
    "IncidentIndexBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "IndexBadGatewayResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentIndexBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "IndexBadRequestResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentIndexEscalationsBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "IndexEscalationsBadGatewayResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentIndexEscalationsBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "IndexEscalationsBadRequestResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentIndexEscalationsForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "IndexEscalationsForbiddenResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentIndexEscalationsInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "IndexEscalationsInternalErrorResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentIndexEscalationsNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "IndexEscalationsNotFoundResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentIndexEscalationsResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.escalations; view=default",
      "type": "object",
      "properties": {
        "escalations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EscalationResponseBody"
          },
          "description": "escalations is the set of escalations.",
          "example": [
            {
              "actions": [
                {
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                },
                {
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                },
                {
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                }
              ],
              "name": "send_email",
              "status": "running"
            },
            {
              "actions": [
                {
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                },
                {
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                },
                {
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                }
              ],
              "name": "send_email",
              "status": "running"
            },
            {
              "actions": [
                {
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                },
                {
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                },
                {
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                }
              ],
              "name": "send_email",
              "status": "running"
            }
          ]
        },
        "finished_at": {
          "type": "string",
          "description": "finished_at is the time when the incident handling is finished. It exists when the status is completed or failed.",
          "example": "2018-06-12T28:45:02Z",
          "format": "date-time"
        },
        "started_at": {
          "type": "string",
          "description": "started_at is the time when the incident handling is started.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "status is the status of all of the escalations.",
          "example": "running",
          "enum": [
            "queued",
            "aborted",
            "running",
            "completed",
            "failed"
          ]
        }
      },
      "description": "IndexEscalationsResponseBody result type (default view)",
      "example": {
        "escalations": [
          {
            "actions": [
              {
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              },
              {
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              },
              {
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              }
            ],
            "name": "send_email",
            "status": "running"
          },
          {
            "actions": [
              {
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              },
              {
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              },
              {
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              }
            ],
            "name": "send_email",
            "status": "running"
          },
          {
            "actions": [
              {
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              },
              {
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              },
              {
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              }
            ],
            "name": "send_email",
            "status": "running"
          }
        ],
        "finished_at": "2018-06-12T28:45:02Z",
        "started_at": "2018-06-12T20:31:02Z",
        "status": "running"
      },
      "required": [
        "status"
      ]
    },
    "IncidentIndexEscalationsUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "IndexEscalationsUnauthorizedResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentIndexForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "IndexForbiddenResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentIndexInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "IndexInternalErrorResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentIndexOKResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.incident_list; view=default",
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "count is the number of incidents in the list.",
          "example": 20,
          "format": "int64"
        },
        "items": {
          "$ref": "#/definitions/IncidentResponseBodyCollection"
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#incident_list\".",
          "example": "gov#incident_list",
          "enum": [
            "gov#incident_list"
          ]
        },
        "not_modified": {
          "type": "string",
          "description": "not_modified is a flag used internally that indicates how to encode the HTTP response (i.e. 200 or 304).",
          "example": "false",
          "enum": [
            "true",
            "false"
          ]
        }
      },
      "description": "IndexOKResponseBody result type (default view)",
      "example": {
        "count": 20,
        "items": [
          {
            "action_failed": false,
            "applied_policy": {
              "created_at": "2018-06-12T20:31:02Z",
              "created_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              },
              "frequency": "daily",
              "href": "/api/governance/projects/60073/applied_policies/abef04b3",
              "id": "304272",
              "kind": "gov#applied_policy",
              "name": "us_east_unattached_volumes",
              "policy_template": {
                "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
                "href": "/api/governance/projects/60073/policy_templates/a88e0d89",
                "id": "324802",
                "kind": "gov#policy_template",
                "name": "unattached_volumes",
                "updated_at": "2018-06-12T20:51:02Z",
                "updated_by": {
                  "email": "support@rightscale.com",
                  "id": 7251,
                  "name": "RightScale support"
                }
              },
              "published_template": {
                "built_in": false,
                "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
                "href": "/api/governance/orgs/48673/published_templates/59",
                "id": "Eligendi dolore illum distinctio.",
                "kind": "gov#published_template",
                "name": "unattached_volumes",
                "updated_at": "2018-06-12T20:51:02Z",
                "updated_by": {
                  "email": "support@rightscale.com",
                  "id": 7251,
                  "name": "RightScale support"
                }
              }
            },
            "category": "tags",
            "created_at": "2018-06-12T20:31:02Z",
            "dry_run": false,
            "etag": "\"d41d8cd98f00b204e9800998ecf8427e\"",
            "href": "/api/governance/projects/60073/incidents/3da39381",
            "id": "309821",
            "kind": "gov#incident",
            "not_modified": "false",
            "options": [
              {
                "label": "Cloud Vendor",
                "name": "cloud_vendor",
                "type": "string",
                "value": "AWS"
              },
              {
                "label": "Email Addresses",
                "name": "email_list",
                "type": "list",
                "value": [
                  "person1@domain.com",
                  "person2@domain.com"
                ]
              }
            ],
            "project": {
              "id": 60073,
              "name": "RightScale Test Account",
              "org_id": 1105,
              "org_name": "RightScale QA"
            },
            "resolution_message": "Unattached volumes were shut down.",
            "resolved_at": "2018-06-12T20:41:02Z",
            "resolved_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "severity": "low",
            "state": "resolved",
            "summary": "Discovered an unattached volume.",
            "updated_at": "2018-06-12T20:41:02Z",
            "violation_data_count": 527
          },
          {
            "action_failed": false,
            "applied_policy": {
              "created_at": "2018-06-12T20:31:02Z",
              "created_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              },
              "frequency": "daily",
              "href": "/api/governance/projects/60073/applied_policies/abef04b3",
              "id": "304272",
              "kind": "gov#applied_policy",
              "name": "us_east_unattached_volumes",
              "policy_template": {
                "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
                "href": "/api/governance/projects/60073/policy_templates/a88e0d89",
                "id": "324802",
                "kind": "gov#policy_template",
                "name": "unattached_volumes",
                "updated_at": "2018-06-12T20:51:02Z",
                "updated_by": {
                  "email": "support@rightscale.com",
                  "id": 7251,
                  "name": "RightScale support"
                }
              },
              "published_template": {
                "built_in": false,
                "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
                "href": "/api/governance/orgs/48673/published_templates/59",
                "id": "Eligendi dolore illum distinctio.",
                "kind": "gov#published_template",
                "name": "unattached_volumes",
                "updated_at": "2018-06-12T20:51:02Z",
                "updated_by": {
                  "email": "support@rightscale.com",
                  "id": 7251,
                  "name": "RightScale support"
                }
              }
            },
            "category": "tags",
            "created_at": "2018-06-12T20:31:02Z",
            "dry_run": false,
            "etag": "\"d41d8cd98f00b204e9800998ecf8427e\"",
            "href": "/api/governance/projects/60073/incidents/3da39381",
            "id": "309821",
            "kind": "gov#incident",
            "not_modified": "false",
            "options": [
              {
                "label": "Cloud Vendor",
                "name": "cloud_vendor",
                "type": "string",
                "value": "AWS"
              },
              {
                "label": "Email Addresses",
                "name": "email_list",
                "type": "list",
                "value": [
                  "person1@domain.com",
                  "person2@domain.com"
                ]
              }
            ],
            "project": {
              "id": 60073,
              "name": "RightScale Test Account",
              "org_id": 1105,
              "org_name": "RightScale QA"
            },
            "resolution_message": "Unattached volumes were shut down.",
            "resolved_at": "2018-06-12T20:41:02Z",
            "resolved_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "severity": "low",
            "state": "resolved",
            "summary": "Discovered an unattached volume.",
            "updated_at": "2018-06-12T20:41:02Z",
            "violation_data_count": 527
          }
        ],
        "kind": "gov#incident_list",
        "not_modified": "false"
      },
      "required": [
        "kind"
      ]
    },
    "IncidentIndexResolutionsBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "IndexResolutionsBadGatewayResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentIndexResolutionsBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "IndexResolutionsBadRequestResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentIndexResolutionsForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "IndexResolutionsForbiddenResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentIndexResolutionsInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "IndexResolutionsInternalErrorResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentIndexResolutionsNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "IndexResolutionsNotFoundResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentIndexResolutionsResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.resolutions; view=default",
      "type": "object",
      "properties": {
        "finished_at": {
          "type": "string",
          "description": "finished_at is the time when the incident handling is finished. It exists when the status is completed or failed.",
          "example": "2018-06-12T28:45:02Z",
          "format": "date-time"
        },
        "resolutions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResolutionResponseBody"
          },
          "description": "resolutions is the set of resolutions.",
          "example": [
            {
              "actions": [
                {
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                },
                {
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                },
                {
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                }
              ],
              "name": "send_email",
              "status": "running"
            },
            {
              "actions": [
                {
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                },
                {
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                },
                {
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                }
              ],
              "name": "send_email",
              "status": "running"
            },
            {
              "actions": [
                {
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                },
                {
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                },
                {
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                }
              ],
              "name": "send_email",
              "status": "running"
            },
            {
              "actions": [
                {
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                },
                {
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                },
                {
                  "error": "failed to create cloud workflow process: definition foo not found",
                  "finished_at": "2018-06-12T22:31:02Z",
                  "started_at": "2018-06-12T20:31:02Z",
                  "status": "running",
                  "type": "email"
                }
              ],
              "name": "send_email",
              "status": "running"
            }
          ]
        },
        "started_at": {
          "type": "string",
          "description": "started_at is the time when the incident handling is started.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "status is the status of all of the resolutions.",
          "example": "running",
          "enum": [
            "queued",
            "aborted",
            "running",
            "completed",
            "failed"
          ]
        }
      },
      "description": "IndexResolutionsResponseBody result type (default view)",
      "example": {
        "finished_at": "2018-06-12T28:45:02Z",
        "resolutions": [
          {
            "actions": [
              {
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              },
              {
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              },
              {
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              }
            ],
            "name": "send_email",
            "status": "running"
          },
          {
            "actions": [
              {
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              },
              {
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              },
              {
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              }
            ],
            "name": "send_email",
            "status": "running"
          },
          {
            "actions": [
              {
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              },
              {
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              },
              {
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              }
            ],
            "name": "send_email",
            "status": "running"
          },
          {
            "actions": [
              {
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              },
              {
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              },
              {
                "error": "failed to create cloud workflow process: definition foo not found",
                "finished_at": "2018-06-12T22:31:02Z",
                "started_at": "2018-06-12T20:31:02Z",
                "status": "running",
                "type": "email"
              }
            ],
            "name": "send_email",
            "status": "running"
          }
        ],
        "started_at": "2018-06-12T20:31:02Z",
        "status": "running"
      },
      "required": [
        "status"
      ]
    },
    "IncidentIndexResolutionsUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "IndexResolutionsUnauthorizedResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentIndexResolutionsUnprocessableEntityResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "IndexResolutionsUnprocessableEntityResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentIndexUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "IndexUnauthorizedResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentResolveBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "ResolveBadGatewayResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentResolveBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "ResolveBadRequestResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentResolveForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "ResolveForbiddenResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentResolveInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "ResolveInternalErrorResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentResolveNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "ResolveNotFoundResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentResolvePreconditionFailedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "ResolvePreconditionFailedResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentResolveUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "ResolveUnauthorizedResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.incident; view=default",
      "type": "object",
      "properties": {
        "action_failed": {
          "type": "boolean",
          "description": "action_failed indicates whether any of the incident's actions failed during execution.",
          "example": false
        },
        "applied_policy": {
          "$ref": "#/definitions/AppliedPolicyResponseBodyLink"
        },
        "category": {
          "type": "string",
          "description": "category is the type categorization of the incident.",
          "example": "tags"
        },
        "created_at": {
          "type": "string",
          "description": "created_at is the incident creation timestamp in RFC3339 format.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "dry_run": {
          "type": "boolean",
          "description": "dry_run is a flag used for testing a policy, that determines whether this incident should trigger escalation actions.",
          "example": false
        },
        "etag": {
          "type": "string",
          "description": "etag is an HTTP ETag for the incident.",
          "example": "\"d41d8cd98f00b204e9800998ecf8427e\""
        },
        "href": {
          "type": "string",
          "description": "href is the href of the incident.",
          "example": "/api/governance/projects/60073/incidents/3da39381",
          "pattern": "^/api/governance/projects/[0-9]+/incidents/[0-9a-f]+$"
        },
        "id": {
          "type": "string",
          "description": "id is the ID of the incident, must be unique in the project.",
          "example": "309821"
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#incident\".",
          "example": "gov#incident",
          "enum": [
            "gov#incident"
          ]
        },
        "not_modified": {
          "type": "string",
          "description": "not_modified is a flag used internally that indicates how to encode the HTTP response (i.e. 200 or 304).",
          "example": "false",
          "enum": [
            "true",
            "false"
          ]
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigurationOptionResponseBody"
          },
          "description": "options list the configuration options used to parameterize the policy that created the incident.",
          "example": [
            {
              "label": "Cloud Vendor",
              "name": "cloud_vendor",
              "type": "string",
              "value": "AWS"
            },
            {
              "label": "Email Addresses",
              "name": "email_list",
              "type": "list",
              "value": [
                "person1@domain.com",
                "person2@domain.com"
              ]
            }
          ]
        },
        "project": {
          "$ref": "#/definitions/ProjectResponseBody"
        },
        "resolution_message": {
          "type": "string",
          "description": "resolution_message is an optional explaination of why the incident is resolved.",
          "example": "Unattached volumes were shut down."
        },
        "resolved_at": {
          "type": "string",
          "description": "resolved_at is the incident resolution timestamp in RFC3339 format.",
          "example": "2018-06-12T20:41:02Z",
          "format": "date-time"
        },
        "resolved_by": {
          "$ref": "#/definitions/UserResponseBody"
        },
        "severity": {
          "type": "string",
          "description": "severity defines the severity level of the incident.",
          "example": "low",
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ]
        },
        "state": {
          "type": "string",
          "description": "state represents the current handling status of the incident.",
          "example": "resolved",
          "enum": [
            "triggered",
            "resolved",
            "terminated"
          ]
        },
        "summary": {
          "type": "string",
          "description": "summary is a summary of the incident.",
          "example": "Discovered an unattached volume."
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at is the incident update timestamp in RFC3339 format.",
          "example": "2018-06-12T20:41:02Z",
          "format": "date-time"
        },
        "violation_data_count": {
          "type": "integer",
          "description": "The number of items in violation data.",
          "example": 527,
          "format": "int64"
        }
      },
      "description": "Incident describes an incident raised from an applied policy. (default view)",
      "example": {
        "action_failed": false,
        "applied_policy": {
          "created_at": "2018-06-12T20:31:02Z",
          "created_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "frequency": "daily",
          "href": "/api/governance/projects/60073/applied_policies/abef04b3",
          "id": "304272",
          "kind": "gov#applied_policy",
          "name": "us_east_unattached_volumes",
          "policy_template": {
            "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
            "href": "/api/governance/projects/60073/policy_templates/a88e0d89",
            "id": "324802",
            "kind": "gov#policy_template",
            "name": "unattached_volumes",
            "updated_at": "2018-06-12T20:51:02Z",
            "updated_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            }
          },
          "published_template": {
            "built_in": false,
            "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
            "href": "/api/governance/orgs/48673/published_templates/59",
            "id": "Eligendi dolore illum distinctio.",
            "kind": "gov#published_template",
            "name": "unattached_volumes",
            "updated_at": "2018-06-12T20:51:02Z",
            "updated_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            }
          }
        },
        "category": "tags",
        "created_at": "2018-06-12T20:31:02Z",
        "dry_run": false,
        "etag": "\"d41d8cd98f00b204e9800998ecf8427e\"",
        "href": "/api/governance/projects/60073/incidents/3da39381",
        "id": "309821",
        "kind": "gov#incident",
        "not_modified": "false",
        "options": [
          {
            "label": "Cloud Vendor",
            "name": "cloud_vendor",
            "type": "string",
            "value": "AWS"
          },
          {
            "label": "Email Addresses",
            "name": "email_list",
            "type": "list",
            "value": [
              "person1@domain.com",
              "person2@domain.com"
            ]
          }
        ],
        "project": {
          "id": 60073,
          "name": "RightScale Test Account",
          "org_id": 1105,
          "org_name": "RightScale QA"
        },
        "resolution_message": "Unattached volumes were shut down.",
        "resolved_at": "2018-06-12T20:41:02Z",
        "resolved_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        },
        "severity": "low",
        "state": "resolved",
        "summary": "Discovered an unattached volume.",
        "updated_at": "2018-06-12T20:41:02Z",
        "violation_data_count": 527
      },
      "required": [
        "id",
        "kind",
        "etag"
      ]
    },
    "IncidentResponseBodyCollection": {
      "title": "Mediatype identifier: application/vnd.rightscale.incident; type=collection; view=default",
      "type": "array",
      "items": {
        "$ref": "#/definitions/IncidentResponseBody"
      },
      "description": "IncidentCollectionResponseBody is the result type for an array of IncidentResponseBody (default view)",
      "example": [
        {
          "action_failed": false,
          "applied_policy": {
            "created_at": "2018-06-12T20:31:02Z",
            "created_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "frequency": "daily",
            "href": "/api/governance/projects/60073/applied_policies/abef04b3",
            "id": "304272",
            "kind": "gov#applied_policy",
            "name": "us_east_unattached_volumes",
            "policy_template": {
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/projects/60073/policy_templates/a88e0d89",
              "id": "324802",
              "kind": "gov#policy_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            },
            "published_template": {
              "built_in": false,
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/orgs/48673/published_templates/59",
              "id": "Eligendi dolore illum distinctio.",
              "kind": "gov#published_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            }
          },
          "category": "tags",
          "created_at": "2018-06-12T20:31:02Z",
          "dry_run": false,
          "etag": "\"d41d8cd98f00b204e9800998ecf8427e\"",
          "href": "/api/governance/projects/60073/incidents/3da39381",
          "id": "309821",
          "kind": "gov#incident",
          "not_modified": "false",
          "options": [
            {
              "label": "Cloud Vendor",
              "name": "cloud_vendor",
              "type": "string",
              "value": "AWS"
            },
            {
              "label": "Email Addresses",
              "name": "email_list",
              "type": "list",
              "value": [
                "person1@domain.com",
                "person2@domain.com"
              ]
            }
          ],
          "project": {
            "id": 60073,
            "name": "RightScale Test Account",
            "org_id": 1105,
            "org_name": "RightScale QA"
          },
          "resolution_message": "Unattached volumes were shut down.",
          "resolved_at": "2018-06-12T20:41:02Z",
          "resolved_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "severity": "low",
          "state": "resolved",
          "summary": "Discovered an unattached volume.",
          "updated_at": "2018-06-12T20:41:02Z",
          "violation_data_count": 527
        },
        {
          "action_failed": false,
          "applied_policy": {
            "created_at": "2018-06-12T20:31:02Z",
            "created_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "frequency": "daily",
            "href": "/api/governance/projects/60073/applied_policies/abef04b3",
            "id": "304272",
            "kind": "gov#applied_policy",
            "name": "us_east_unattached_volumes",
            "policy_template": {
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/projects/60073/policy_templates/a88e0d89",
              "id": "324802",
              "kind": "gov#policy_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            },
            "published_template": {
              "built_in": false,
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/orgs/48673/published_templates/59",
              "id": "Eligendi dolore illum distinctio.",
              "kind": "gov#published_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            }
          },
          "category": "tags",
          "created_at": "2018-06-12T20:31:02Z",
          "dry_run": false,
          "etag": "\"d41d8cd98f00b204e9800998ecf8427e\"",
          "href": "/api/governance/projects/60073/incidents/3da39381",
          "id": "309821",
          "kind": "gov#incident",
          "not_modified": "false",
          "options": [
            {
              "label": "Cloud Vendor",
              "name": "cloud_vendor",
              "type": "string",
              "value": "AWS"
            },
            {
              "label": "Email Addresses",
              "name": "email_list",
              "type": "list",
              "value": [
                "person1@domain.com",
                "person2@domain.com"
              ]
            }
          ],
          "project": {
            "id": 60073,
            "name": "RightScale Test Account",
            "org_id": 1105,
            "org_name": "RightScale QA"
          },
          "resolution_message": "Unattached volumes were shut down.",
          "resolved_at": "2018-06-12T20:41:02Z",
          "resolved_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "severity": "low",
          "state": "resolved",
          "summary": "Discovered an unattached volume.",
          "updated_at": "2018-06-12T20:41:02Z",
          "violation_data_count": 527
        },
        {
          "action_failed": false,
          "applied_policy": {
            "created_at": "2018-06-12T20:31:02Z",
            "created_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "frequency": "daily",
            "href": "/api/governance/projects/60073/applied_policies/abef04b3",
            "id": "304272",
            "kind": "gov#applied_policy",
            "name": "us_east_unattached_volumes",
            "policy_template": {
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/projects/60073/policy_templates/a88e0d89",
              "id": "324802",
              "kind": "gov#policy_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            },
            "published_template": {
              "built_in": false,
              "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
              "href": "/api/governance/orgs/48673/published_templates/59",
              "id": "Eligendi dolore illum distinctio.",
              "kind": "gov#published_template",
              "name": "unattached_volumes",
              "updated_at": "2018-06-12T20:51:02Z",
              "updated_by": {
                "email": "support@rightscale.com",
                "id": 7251,
                "name": "RightScale support"
              }
            }
          },
          "category": "tags",
          "created_at": "2018-06-12T20:31:02Z",
          "dry_run": false,
          "etag": "\"d41d8cd98f00b204e9800998ecf8427e\"",
          "href": "/api/governance/projects/60073/incidents/3da39381",
          "id": "309821",
          "kind": "gov#incident",
          "not_modified": "false",
          "options": [
            {
              "label": "Cloud Vendor",
              "name": "cloud_vendor",
              "type": "string",
              "value": "AWS"
            },
            {
              "label": "Email Addresses",
              "name": "email_list",
              "type": "list",
              "value": [
                "person1@domain.com",
                "person2@domain.com"
              ]
            }
          ],
          "project": {
            "id": 60073,
            "name": "RightScale Test Account",
            "org_id": 1105,
            "org_name": "RightScale QA"
          },
          "resolution_message": "Unattached volumes were shut down.",
          "resolved_at": "2018-06-12T20:41:02Z",
          "resolved_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "severity": "low",
          "state": "resolved",
          "summary": "Discovered an unattached volume.",
          "updated_at": "2018-06-12T20:41:02Z",
          "violation_data_count": 527
        }
      ]
    },
    "IncidentShowBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "ShowBadGatewayResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentShowBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "ShowBadRequestResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentShowForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "ShowForbiddenResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentShowInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "ShowInternalErrorResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentShowNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "ShowNotFoundResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "IncidentShowOKResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.incident; view=default",
      "type": "object",
      "properties": {
        "action_failed": {
          "type": "boolean",
          "description": "action_failed indicates whether any of the incident's actions failed during execution.",
          "example": false
        },
        "applied_policy": {
          "$ref": "#/definitions/AppliedPolicyResponseBodyLink"
        },
        "category": {
          "type": "string",
          "description": "category is the type categorization of the incident.",
          "example": "tags"
        },
        "created_at": {
          "type": "string",
          "description": "created_at is the incident creation timestamp in RFC3339 format.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "dry_run": {
          "type": "boolean",
          "description": "dry_run is a flag used for testing a policy, that determines whether this incident should trigger escalation actions.",
          "example": false
        },
        "href": {
          "type": "string",
          "description": "href is the href of the incident.",
          "example": "/api/governance/projects/60073/incidents/3da39381",
          "pattern": "^/api/governance/projects/[0-9]+/incidents/[0-9a-f]+$"
        },
        "id": {
          "type": "string",
          "description": "id is the ID of the incident, must be unique in the project.",
          "example": "309821"
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#incident\".",
          "example": "gov#incident",
          "enum": [
            "gov#incident"
          ]
        },
        "not_modified": {
          "type": "string",
          "description": "not_modified is a flag used internally that indicates how to encode the HTTP response (i.e. 200 or 304).",
          "example": "false",
          "enum": [
            "true",
            "false"
          ]
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigurationOptionResponseBody"
          },
          "description": "options list the configuration options used to parameterize the policy that created the incident.",
          "example": [
            {
              "label": "Cloud Vendor",
              "name": "cloud_vendor",
              "type": "string",
              "value": "AWS"
            },
            {
              "label": "Email Addresses",
              "name": "email_list",
              "type": "list",
              "value": [
                "person1@domain.com",
                "person2@domain.com"
              ]
            }
          ]
        },
        "project": {
          "$ref": "#/definitions/ProjectResponseBody"
        },
        "resolution_message": {
          "type": "string",
          "description": "resolution_message is an optional explaination of why the incident is resolved.",
          "example": "Unattached volumes were shut down."
        },
        "resolved_at": {
          "type": "string",
          "description": "resolved_at is the incident resolution timestamp in RFC3339 format.",
          "example": "2018-06-12T20:41:02Z",
          "format": "date-time"
        },
        "resolved_by": {
          "$ref": "#/definitions/UserResponseBody"
        },
        "severity": {
          "type": "string",
          "description": "severity defines the severity level of the incident.",
          "example": "low",
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ]
        },
        "state": {
          "type": "string",
          "description": "state represents the current handling status of the incident.",
          "example": "resolved",
          "enum": [
            "triggered",
            "resolved",
            "terminated"
          ]
        },
        "summary": {
          "type": "string",
          "description": "summary is a summary of the incident.",
          "example": "Discovered an unattached volume."
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at is the incident update timestamp in RFC3339 format.",
          "example": "2018-06-12T20:41:02Z",
          "format": "date-time"
        },
        "violation_data_count": {
          "type": "integer",
          "description": "The number of items in violation data.",
          "example": 527,
          "format": "int64"
        }
      },
      "description": "ShowOKResponseBody result type (default view)",
      "example": {
        "action_failed": false,
        "applied_policy": {
          "created_at": "2018-06-12T20:31:02Z",
          "created_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "frequency": "daily",
          "href": "/api/governance/projects/60073/applied_policies/abef04b3",
          "id": "304272",
          "kind": "gov#applied_policy",
          "name": "us_east_unattached_volumes",
          "policy_template": {
            "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
            "href": "/api/governance/projects/60073/policy_templates/a88e0d89",
            "id": "324802",
            "kind": "gov#policy_template",
            "name": "unattached_volumes",
            "updated_at": "2018-06-12T20:51:02Z",
            "updated_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            }
          },
          "published_template": {
            "built_in": false,
            "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
            "href": "/api/governance/orgs/48673/published_templates/59",
            "id": "Eligendi dolore illum distinctio.",
            "kind": "gov#published_template",
            "name": "unattached_volumes",
            "updated_at": "2018-06-12T20:51:02Z",
            "updated_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            }
          }
        },
        "category": "tags",
        "created_at": "2018-06-12T20:31:02Z",
        "dry_run": false,
        "href": "/api/governance/projects/60073/incidents/3da39381",
        "id": "309821",
        "kind": "gov#incident",
        "not_modified": "false",
        "options": [
          {
            "label": "Cloud Vendor",
            "name": "cloud_vendor",
            "type": "string",
            "value": "AWS"
          },
          {
            "label": "Email Addresses",
            "name": "email_list",
            "type": "list",
            "value": [
              "person1@domain.com",
              "person2@domain.com"
            ]
          }
        ],
        "project": {
          "id": 60073,
          "name": "RightScale Test Account",
          "org_id": 1105,
          "org_name": "RightScale QA"
        },
        "resolution_message": "Unattached volumes were shut down.",
        "resolved_at": "2018-06-12T20:41:02Z",
        "resolved_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        },
        "severity": "low",
        "state": "resolved",
        "summary": "Discovered an unattached volume.",
        "updated_at": "2018-06-12T20:41:02Z",
        "violation_data_count": 527
      },
      "required": [
        "id",
        "kind"
      ]
    },
    "IncidentShowUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "ShowUnauthorizedResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateCompileBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "CompileBadGatewayResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateCompileBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "CompileBadRequestResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateCompileForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "CompileForbiddenResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateCompileInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "CompileInternalErrorResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateCompileInvalidTemplateResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.compilation_errors; view=default",
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompilationErrorResponseBody"
          },
          "description": "errors is a JSON Array of compilation errors.",
          "example": [
            {
              "origin": "template: template.policy, line: 3",
              "problem": "Undefined variable or method",
              "resolution": "Define 'foo'",
              "summary": "'foo' is undefined"
            },
            {
              "origin": "template: template.policy, line: 3",
              "problem": "Undefined variable or method",
              "resolution": "Define 'foo'",
              "summary": "'foo' is undefined"
            }
          ]
        },
        "id": {
          "type": "string",
          "description": "id is a unique identifier for this particular occurrence of the problem.",
          "example": "305913"
        },
        "name": {
          "type": "string",
          "description": "name of error",
          "example": "invalid_template",
          "enum": [
            "invalid_template"
          ]
        }
      },
      "description": "CompileInvalidTemplateResponseBody result type (default view)",
      "example": {
        "errors": [
          {
            "origin": "template: template.policy, line: 3",
            "problem": "Undefined variable or method",
            "resolution": "Define 'foo'",
            "summary": "'foo' is undefined"
          },
          {
            "origin": "template: template.policy, line: 3",
            "problem": "Undefined variable or method",
            "resolution": "Define 'foo'",
            "summary": "'foo' is undefined"
          },
          {
            "origin": "template: template.policy, line: 3",
            "problem": "Undefined variable or method",
            "resolution": "Define 'foo'",
            "summary": "'foo' is undefined"
          }
        ],
        "id": "305913",
        "name": "invalid_template"
      },
      "required": [
        "id",
        "name",
        "errors"
      ]
    },
    "PolicyTemplateCompileRequestBody": {
      "title": "PolicyTemplateCompileRequestBody",
      "type": "object",
      "properties": {
        "filename": {
          "type": "string",
          "description": "filename is the name of the policy template source code file.",
          "example": "file.pt"
        },
        "source": {
          "type": "string",
          "description": "source is the policy template source code.",
          "example": "policy unattached_volumes do\n\t\t\t\t\t# ...\n\t\t\t\t\tend"
        }
      },
      "example": {
        "filename": "file.pt",
        "source": "policy unattached_volumes do\n\t\t\t\t\t# ...\n\t\t\t\t\tend"
      },
      "required": [
        "filename",
        "source"
      ]
    },
    "PolicyTemplateCompileUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "CompileUnauthorizedResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateDeleteBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "DeleteBadGatewayResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateDeleteBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "DeleteBadRequestResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateDeleteForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "DeleteForbiddenResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateDeleteInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "DeleteInternalErrorResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateDeleteNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "DeleteNotFoundResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateDeleteUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "DeleteUnauthorizedResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateIndexBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "IndexBadGatewayResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateIndexBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "IndexBadRequestResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateIndexForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "IndexForbiddenResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateIndexInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "IndexInternalErrorResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateIndexOKResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.policy_template_list; view=default",
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "count is the number of policy templates in the list.",
          "example": 20,
          "format": "int64"
        },
        "items": {
          "$ref": "#/definitions/PolicyTemplateResponseBodyCollection"
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#policy_template_list\".",
          "example": "gov#policy_template_list",
          "enum": [
            "gov#policy_template_list"
          ]
        },
        "not_modified": {
          "type": "string",
          "description": "not_modified is a flag used internally that indicates how to encode the HTTP response (i.e. 200 or 304).",
          "example": "false",
          "enum": [
            "true",
            "false"
          ]
        }
      },
      "description": "IndexOKResponseBody result type (default view)",
      "example": {
        "count": 20,
        "items": [
          {
            "category": "tags",
            "created_at": "2018-06-12T20:31:02Z",
            "created_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "doc_link": "https://rightscale.com",
            "filename": "unattached_volumes_policy.pt",
            "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
            "href": "/api/governance/projects/60073/policy_templates/a88e0d89",
            "id": "324802",
            "info": {
              "author": "RightScale",
              "support": "support@rightscale.com"
            },
            "kind": "gov#policy_template",
            "long_description": "## Usage...",
            "name": "unattached_volumes",
            "parameters": {
              "allowed_ports": {
                "allowed_values": [
                  "80",
                  "8080"
                ],
                "category": "Cloud Filters",
                "description": "The TCP/UDP port numbers that are allowed to be open",
                "index": 2,
                "name": "allowed_ports",
                "type": "list"
              }
            },
            "permissions": {
              "retrieve_volumes": {
                "actions": [
                  "rs_cm.index"
                ],
                "label": "Retrieve Volumes",
                "name": "retrieve_volumes",
                "resources": [
                  "rs_cm.volumes"
                ]
              }
            },
            "project_id": 60073,
            "required_roles": [
              "actor",
              "credential_viewer"
            ],
            "rs_pt_ver": 20180301,
            "severity": "low",
            "short_description": "Checks for ports that are open in instances",
            "source": "policy unattached_volumes do\n  # ...\nend",
            "updated_at": "2018-06-12T20:51:02Z",
            "updated_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            }
          },
          {
            "category": "tags",
            "created_at": "2018-06-12T20:31:02Z",
            "created_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "doc_link": "https://rightscale.com",
            "filename": "unattached_volumes_policy.pt",
            "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
            "href": "/api/governance/projects/60073/policy_templates/a88e0d89",
            "id": "324802",
            "info": {
              "author": "RightScale",
              "support": "support@rightscale.com"
            },
            "kind": "gov#policy_template",
            "long_description": "## Usage...",
            "name": "unattached_volumes",
            "parameters": {
              "allowed_ports": {
                "allowed_values": [
                  "80",
                  "8080"
                ],
                "category": "Cloud Filters",
                "description": "The TCP/UDP port numbers that are allowed to be open",
                "index": 2,
                "name": "allowed_ports",
                "type": "list"
              }
            },
            "permissions": {
              "retrieve_volumes": {
                "actions": [
                  "rs_cm.index"
                ],
                "label": "Retrieve Volumes",
                "name": "retrieve_volumes",
                "resources": [
                  "rs_cm.volumes"
                ]
              }
            },
            "project_id": 60073,
            "required_roles": [
              "actor",
              "credential_viewer"
            ],
            "rs_pt_ver": 20180301,
            "severity": "low",
            "short_description": "Checks for ports that are open in instances",
            "source": "policy unattached_volumes do\n  # ...\nend",
            "updated_at": "2018-06-12T20:51:02Z",
            "updated_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            }
          },
          {
            "category": "tags",
            "created_at": "2018-06-12T20:31:02Z",
            "created_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "doc_link": "https://rightscale.com",
            "filename": "unattached_volumes_policy.pt",
            "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
            "href": "/api/governance/projects/60073/policy_templates/a88e0d89",
            "id": "324802",
            "info": {
              "author": "RightScale",
              "support": "support@rightscale.com"
            },
            "kind": "gov#policy_template",
            "long_description": "## Usage...",
            "name": "unattached_volumes",
            "parameters": {
              "allowed_ports": {
                "allowed_values": [
                  "80",
                  "8080"
                ],
                "category": "Cloud Filters",
                "description": "The TCP/UDP port numbers that are allowed to be open",
                "index": 2,
                "name": "allowed_ports",
                "type": "list"
              }
            },
            "permissions": {
              "retrieve_volumes": {
                "actions": [
                  "rs_cm.index"
                ],
                "label": "Retrieve Volumes",
                "name": "retrieve_volumes",
                "resources": [
                  "rs_cm.volumes"
                ]
              }
            },
            "project_id": 60073,
            "required_roles": [
              "actor",
              "credential_viewer"
            ],
            "rs_pt_ver": 20180301,
            "severity": "low",
            "short_description": "Checks for ports that are open in instances",
            "source": "policy unattached_volumes do\n  # ...\nend",
            "updated_at": "2018-06-12T20:51:02Z",
            "updated_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            }
          }
        ],
        "kind": "gov#policy_template_list",
        "not_modified": "false"
      },
      "required": [
        "kind"
      ]
    },
    "PolicyTemplateIndexUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "IndexUnauthorizedResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.policy_template; view=default",
      "type": "object",
      "properties": {
        "category": {
          "type": "string",
          "description": "category is the type categorization of the policy template.",
          "example": "tags"
        },
        "created_at": {
          "type": "string",
          "description": "created_at is the policy template creation timestamp in RFC3339 format.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "created_by": {
          "$ref": "#/definitions/UserResponseBody"
        },
        "doc_link": {
          "type": "string",
          "description": "doc_link is an HTTP URI to a page containing detailed documentation for the policy.",
          "example": "https://rightscale.com",
          "format": "uri"
        },
        "fingerprint": {
          "type": "string",
          "description": "fingerprint is a SHA created during compilation. It is used to determine if the template is outdated.",
          "example": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728"
        },
        "href": {
          "type": "string",
          "description": "href is the href of the policy template.",
          "example": "/api/governance/projects/60073/policy_templates/a88e0d89",
          "pattern": "^/api/governance/projects/[0-9]+/policy_templates/[0-9a-f]+$"
        },
        "id": {
          "type": "string",
          "description": "id identifies a policy template by ID.",
          "example": "324802"
        },
        "info": {
          "type": "object",
          "description": "info is an arbitrary set of key/value pairs that provide additional information such as the policy author, support contact information, etc.",
          "example": {
            "author": "RightScale",
            "support": "support@rightscale.com"
          },
          "additionalProperties": true
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#policy_template\".",
          "example": "gov#policy_template",
          "enum": [
            "gov#policy_template"
          ]
        },
        "name": {
          "type": "string",
          "description": "name is the unique name of the policy template in the project.",
          "example": "unattached_volumes"
        },
        "project_id": {
          "type": "integer",
          "description": "project_id is the ID of the project that the policy template applies to.",
          "example": 60073,
          "format": "int64"
        },
        "required_roles": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "Est sit expedita voluptatem."
          },
          "description": "required_roles is a list of governance roles, derived from permissions, required to run the policy.",
          "example": [
            "actor",
            "credential_viewer"
          ]
        },
        "rs_pt_ver": {
          "type": "integer",
          "description": "rs_pt_ver is the policy engine version.",
          "example": 20180301,
          "format": "int64"
        },
        "severity": {
          "type": "string",
          "description": "severity defines the severity level of incidents raised from this policy template.",
          "example": "low",
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ]
        },
        "short_description": {
          "type": "string",
          "description": "short_description is the short description of the policy template.",
          "example": "Checks for ports that are open in instances"
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at is the last update timestamp in RFC3339 format.",
          "example": "2018-06-12T20:51:02Z",
          "format": "date-time"
        },
        "updated_by": {
          "$ref": "#/definitions/UserResponseBody"
        }
      },
      "description": "PolicyTemplate describes a previously uploaded policy template. (default view)",
      "example": {
        "category": "tags",
        "created_at": "2018-06-12T20:31:02Z",
        "created_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        },
        "doc_link": "https://rightscale.com",
        "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
        "href": "/api/governance/projects/60073/policy_templates/a88e0d89",
        "id": "324802",
        "info": {
          "author": "RightScale",
          "support": "support@rightscale.com"
        },
        "kind": "gov#policy_template",
        "name": "unattached_volumes",
        "project_id": 60073,
        "required_roles": [
          "actor",
          "credential_viewer"
        ],
        "rs_pt_ver": 20180301,
        "severity": "low",
        "short_description": "Checks for ports that are open in instances",
        "updated_at": "2018-06-12T20:51:02Z",
        "updated_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        }
      },
      "required": [
        "id",
        "name",
        "href",
        "fingerprint",
        "kind"
      ]
    },
    "PolicyTemplateResponseBodyCollection": {
      "title": "Mediatype identifier: application/vnd.rightscale.policy_template; type=collection; view=default",
      "type": "array",
      "items": {
        "$ref": "#/definitions/PolicyTemplateResponseBody"
      },
      "description": "PolicyTemplateCollectionResponseBody is the result type for an array of PolicyTemplateResponseBody (default view)",
      "example": [
        {
          "category": "tags",
          "created_at": "2018-06-12T20:31:02Z",
          "created_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "doc_link": "https://rightscale.com",
          "filename": "unattached_volumes_policy.pt",
          "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
          "href": "/api/governance/projects/60073/policy_templates/a88e0d89",
          "id": "324802",
          "info": {
            "author": "RightScale",
            "support": "support@rightscale.com"
          },
          "kind": "gov#policy_template",
          "long_description": "## Usage...",
          "name": "unattached_volumes",
          "parameters": {
            "allowed_ports": {
              "allowed_values": [
                "80",
                "8080"
              ],
              "category": "Cloud Filters",
              "description": "The TCP/UDP port numbers that are allowed to be open",
              "index": 2,
              "name": "allowed_ports",
              "type": "list"
            }
          },
          "permissions": {
            "retrieve_volumes": {
              "actions": [
                "rs_cm.index"
              ],
              "label": "Retrieve Volumes",
              "name": "retrieve_volumes",
              "resources": [
                "rs_cm.volumes"
              ]
            }
          },
          "project_id": 60073,
          "required_roles": [
            "actor",
            "credential_viewer"
          ],
          "rs_pt_ver": 20180301,
          "severity": "low",
          "short_description": "Checks for ports that are open in instances",
          "source": "policy unattached_volumes do\n  # ...\nend",
          "updated_at": "2018-06-12T20:51:02Z",
          "updated_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          }
        },
        {
          "category": "tags",
          "created_at": "2018-06-12T20:31:02Z",
          "created_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "doc_link": "https://rightscale.com",
          "filename": "unattached_volumes_policy.pt",
          "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
          "href": "/api/governance/projects/60073/policy_templates/a88e0d89",
          "id": "324802",
          "info": {
            "author": "RightScale",
            "support": "support@rightscale.com"
          },
          "kind": "gov#policy_template",
          "long_description": "## Usage...",
          "name": "unattached_volumes",
          "parameters": {
            "allowed_ports": {
              "allowed_values": [
                "80",
                "8080"
              ],
              "category": "Cloud Filters",
              "description": "The TCP/UDP port numbers that are allowed to be open",
              "index": 2,
              "name": "allowed_ports",
              "type": "list"
            }
          },
          "permissions": {
            "retrieve_volumes": {
              "actions": [
                "rs_cm.index"
              ],
              "label": "Retrieve Volumes",
              "name": "retrieve_volumes",
              "resources": [
                "rs_cm.volumes"
              ]
            }
          },
          "project_id": 60073,
          "required_roles": [
            "actor",
            "credential_viewer"
          ],
          "rs_pt_ver": 20180301,
          "severity": "low",
          "short_description": "Checks for ports that are open in instances",
          "source": "policy unattached_volumes do\n  # ...\nend",
          "updated_at": "2018-06-12T20:51:02Z",
          "updated_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          }
        },
        {
          "category": "tags",
          "created_at": "2018-06-12T20:31:02Z",
          "created_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "doc_link": "https://rightscale.com",
          "filename": "unattached_volumes_policy.pt",
          "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
          "href": "/api/governance/projects/60073/policy_templates/a88e0d89",
          "id": "324802",
          "info": {
            "author": "RightScale",
            "support": "support@rightscale.com"
          },
          "kind": "gov#policy_template",
          "long_description": "## Usage...",
          "name": "unattached_volumes",
          "parameters": {
            "allowed_ports": {
              "allowed_values": [
                "80",
                "8080"
              ],
              "category": "Cloud Filters",
              "description": "The TCP/UDP port numbers that are allowed to be open",
              "index": 2,
              "name": "allowed_ports",
              "type": "list"
            }
          },
          "permissions": {
            "retrieve_volumes": {
              "actions": [
                "rs_cm.index"
              ],
              "label": "Retrieve Volumes",
              "name": "retrieve_volumes",
              "resources": [
                "rs_cm.volumes"
              ]
            }
          },
          "project_id": 60073,
          "required_roles": [
            "actor",
            "credential_viewer"
          ],
          "rs_pt_ver": 20180301,
          "severity": "low",
          "short_description": "Checks for ports that are open in instances",
          "source": "policy unattached_volumes do\n  # ...\nend",
          "updated_at": "2018-06-12T20:51:02Z",
          "updated_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          }
        },
        {
          "category": "tags",
          "created_at": "2018-06-12T20:31:02Z",
          "created_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "doc_link": "https://rightscale.com",
          "filename": "unattached_volumes_policy.pt",
          "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
          "href": "/api/governance/projects/60073/policy_templates/a88e0d89",
          "id": "324802",
          "info": {
            "author": "RightScale",
            "support": "support@rightscale.com"
          },
          "kind": "gov#policy_template",
          "long_description": "## Usage...",
          "name": "unattached_volumes",
          "parameters": {
            "allowed_ports": {
              "allowed_values": [
                "80",
                "8080"
              ],
              "category": "Cloud Filters",
              "description": "The TCP/UDP port numbers that are allowed to be open",
              "index": 2,
              "name": "allowed_ports",
              "type": "list"
            }
          },
          "permissions": {
            "retrieve_volumes": {
              "actions": [
                "rs_cm.index"
              ],
              "label": "Retrieve Volumes",
              "name": "retrieve_volumes",
              "resources": [
                "rs_cm.volumes"
              ]
            }
          },
          "project_id": 60073,
          "required_roles": [
            "actor",
            "credential_viewer"
          ],
          "rs_pt_ver": 20180301,
          "severity": "low",
          "short_description": "Checks for ports that are open in instances",
          "source": "policy unattached_volumes do\n  # ...\nend",
          "updated_at": "2018-06-12T20:51:02Z",
          "updated_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          }
        }
      ]
    },
    "PolicyTemplateResponseBodyLink": {
      "title": "Mediatype identifier: application/vnd.rightscale.policy_template; view=default",
      "type": "object",
      "properties": {
        "fingerprint": {
          "type": "string",
          "description": "fingerprint is a SHA created during compilation. It is used to determine if the template is outdated.",
          "example": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728"
        },
        "href": {
          "type": "string",
          "description": "href is the href of the policy template.",
          "example": "/api/governance/projects/60073/policy_templates/a88e0d89",
          "pattern": "^/api/governance/projects/[0-9]+/policy_templates/[0-9a-f]+$"
        },
        "id": {
          "type": "string",
          "description": "id identifies a policy template by ID.",
          "example": "324802"
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#policy_template\".",
          "example": "gov#policy_template",
          "enum": [
            "gov#policy_template"
          ]
        },
        "name": {
          "type": "string",
          "description": "name is the unique name of the policy template in the project.",
          "example": "unattached_volumes"
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at is the last update timestamp in RFC3339 format.",
          "example": "2018-06-12T20:51:02Z",
          "format": "date-time"
        },
        "updated_by": {
          "$ref": "#/definitions/UserResponseBody"
        }
      },
      "description": "PolicyTemplate describes a previously uploaded policy template. (default view)",
      "example": {
        "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
        "href": "/api/governance/projects/60073/policy_templates/a88e0d89",
        "id": "324802",
        "kind": "gov#policy_template",
        "name": "unattached_volumes",
        "updated_at": "2018-06-12T20:51:02Z",
        "updated_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        }
      },
      "required": [
        "id",
        "name",
        "href",
        "fingerprint",
        "kind"
      ]
    },
    "PolicyTemplateShowBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "ShowBadGatewayResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateShowBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "ShowBadRequestResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateShowForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "ShowForbiddenResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateShowInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "ShowInternalErrorResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateShowNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "ShowNotFoundResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateShowResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.policy_template; view=default",
      "type": "object",
      "properties": {
        "category": {
          "type": "string",
          "description": "category is the type categorization of the policy template.",
          "example": "tags"
        },
        "created_at": {
          "type": "string",
          "description": "created_at is the policy template creation timestamp in RFC3339 format.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "created_by": {
          "$ref": "#/definitions/UserResponseBody"
        },
        "doc_link": {
          "type": "string",
          "description": "doc_link is an HTTP URI to a page containing detailed documentation for the policy.",
          "example": "https://rightscale.com",
          "format": "uri"
        },
        "fingerprint": {
          "type": "string",
          "description": "fingerprint is a SHA created during compilation. It is used to determine if the template is outdated.",
          "example": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728"
        },
        "href": {
          "type": "string",
          "description": "href is the href of the policy template.",
          "example": "/api/governance/projects/60073/policy_templates/a88e0d89",
          "pattern": "^/api/governance/projects/[0-9]+/policy_templates/[0-9a-f]+$"
        },
        "id": {
          "type": "string",
          "description": "id identifies a policy template by ID.",
          "example": "324802"
        },
        "info": {
          "type": "object",
          "description": "info is an arbitrary set of key/value pairs that provide additional information such as the policy author, support contact information, etc.",
          "example": {
            "author": "RightScale",
            "support": "support@rightscale.com"
          },
          "additionalProperties": true
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#policy_template\".",
          "example": "gov#policy_template",
          "enum": [
            "gov#policy_template"
          ]
        },
        "name": {
          "type": "string",
          "description": "name is the unique name of the policy template in the project.",
          "example": "unattached_volumes"
        },
        "project_id": {
          "type": "integer",
          "description": "project_id is the ID of the project that the policy template applies to.",
          "example": 60073,
          "format": "int64"
        },
        "required_roles": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "Quis quaerat velit."
          },
          "description": "required_roles is a list of governance roles, derived from permissions, required to run the policy.",
          "example": [
            "actor",
            "credential_viewer"
          ]
        },
        "rs_pt_ver": {
          "type": "integer",
          "description": "rs_pt_ver is the policy engine version.",
          "example": 20180301,
          "format": "int64"
        },
        "severity": {
          "type": "string",
          "description": "severity defines the severity level of incidents raised from this policy template.",
          "example": "low",
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ]
        },
        "short_description": {
          "type": "string",
          "description": "short_description is the short description of the policy template.",
          "example": "Checks for ports that are open in instances"
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at is the last update timestamp in RFC3339 format.",
          "example": "2018-06-12T20:51:02Z",
          "format": "date-time"
        },
        "updated_by": {
          "$ref": "#/definitions/UserResponseBody"
        }
      },
      "description": "ShowResponseBody result type (default view)",
      "example": {
        "category": "tags",
        "created_at": "2018-06-12T20:31:02Z",
        "created_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        },
        "doc_link": "https://rightscale.com",
        "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
        "href": "/api/governance/projects/60073/policy_templates/a88e0d89",
        "id": "324802",
        "info": {
          "author": "RightScale",
          "support": "support@rightscale.com"
        },
        "kind": "gov#policy_template",
        "name": "unattached_volumes",
        "project_id": 60073,
        "required_roles": [
          "actor",
          "credential_viewer"
        ],
        "rs_pt_ver": 20180301,
        "severity": "low",
        "short_description": "Checks for ports that are open in instances",
        "updated_at": "2018-06-12T20:51:02Z",
        "updated_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        }
      },
      "required": [
        "id",
        "name",
        "href",
        "fingerprint",
        "kind"
      ]
    },
    "PolicyTemplateShowUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "ShowUnauthorizedResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateUpdateBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "UpdateBadGatewayResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateUpdateBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "UpdateBadRequestResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateUpdateForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "UpdateForbiddenResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateUpdateInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "UpdateInternalErrorResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateUpdateInvalidTemplateResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.compilation_errors; view=default",
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompilationErrorResponseBody"
          },
          "description": "errors is a JSON Array of compilation errors.",
          "example": [
            {
              "origin": "template: template.policy, line: 3",
              "problem": "Undefined variable or method",
              "resolution": "Define 'foo'",
              "summary": "'foo' is undefined"
            },
            {
              "origin": "template: template.policy, line: 3",
              "problem": "Undefined variable or method",
              "resolution": "Define 'foo'",
              "summary": "'foo' is undefined"
            },
            {
              "origin": "template: template.policy, line: 3",
              "problem": "Undefined variable or method",
              "resolution": "Define 'foo'",
              "summary": "'foo' is undefined"
            },
            {
              "origin": "template: template.policy, line: 3",
              "problem": "Undefined variable or method",
              "resolution": "Define 'foo'",
              "summary": "'foo' is undefined"
            }
          ]
        },
        "id": {
          "type": "string",
          "description": "id is a unique identifier for this particular occurrence of the problem.",
          "example": "305913"
        },
        "name": {
          "type": "string",
          "description": "name of error",
          "example": "invalid_template",
          "enum": [
            "invalid_template"
          ]
        }
      },
      "description": "UpdateInvalidTemplateResponseBody result type (default view)",
      "example": {
        "errors": [
          {
            "origin": "template: template.policy, line: 3",
            "problem": "Undefined variable or method",
            "resolution": "Define 'foo'",
            "summary": "'foo' is undefined"
          },
          {
            "origin": "template: template.policy, line: 3",
            "problem": "Undefined variable or method",
            "resolution": "Define 'foo'",
            "summary": "'foo' is undefined"
          },
          {
            "origin": "template: template.policy, line: 3",
            "problem": "Undefined variable or method",
            "resolution": "Define 'foo'",
            "summary": "'foo' is undefined"
          }
        ],
        "id": "305913",
        "name": "invalid_template"
      },
      "required": [
        "id",
        "name",
        "errors"
      ]
    },
    "PolicyTemplateUpdateNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "UpdateNotFoundResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateUpdateRequestBody": {
      "title": "PolicyTemplateUpdateRequestBody",
      "type": "object",
      "properties": {
        "filename": {
          "type": "string",
          "description": "filename is the name of the policy template source code file.",
          "example": "tag_checker.pt"
        },
        "source": {
          "type": "string",
          "description": "source is the policy template source code.",
          "example": "policy unattached_volumes do\n\t\t\t\t\t# ...\n\t\t\t\t\tend"
        }
      },
      "example": {
        "filename": "tag_checker.pt",
        "source": "policy unattached_volumes do\n\t\t\t\t\t# ...\n\t\t\t\t\tend"
      },
      "required": [
        "filename",
        "source"
      ]
    },
    "PolicyTemplateUpdateResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.policy_template; view=default",
      "type": "object",
      "properties": {
        "category": {
          "type": "string",
          "description": "category is the type categorization of the policy template.",
          "example": "tags"
        },
        "created_at": {
          "type": "string",
          "description": "created_at is the policy template creation timestamp in RFC3339 format.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "created_by": {
          "$ref": "#/definitions/UserResponseBody"
        },
        "doc_link": {
          "type": "string",
          "description": "doc_link is an HTTP URI to a page containing detailed documentation for the policy.",
          "example": "https://rightscale.com",
          "format": "uri"
        },
        "fingerprint": {
          "type": "string",
          "description": "fingerprint is a SHA created during compilation. It is used to determine if the template is outdated.",
          "example": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728"
        },
        "href": {
          "type": "string",
          "description": "href is the href of the policy template.",
          "example": "/api/governance/projects/60073/policy_templates/a88e0d89",
          "pattern": "^/api/governance/projects/[0-9]+/policy_templates/[0-9a-f]+$"
        },
        "id": {
          "type": "string",
          "description": "id identifies a policy template by ID.",
          "example": "324802"
        },
        "info": {
          "type": "object",
          "description": "info is an arbitrary set of key/value pairs that provide additional information such as the policy author, support contact information, etc.",
          "example": {
            "author": "RightScale",
            "support": "support@rightscale.com"
          },
          "additionalProperties": true
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#policy_template\".",
          "example": "gov#policy_template",
          "enum": [
            "gov#policy_template"
          ]
        },
        "name": {
          "type": "string",
          "description": "name is the unique name of the policy template in the project.",
          "example": "unattached_volumes"
        },
        "project_id": {
          "type": "integer",
          "description": "project_id is the ID of the project that the policy template applies to.",
          "example": 60073,
          "format": "int64"
        },
        "required_roles": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "Totam excepturi officia voluptatem illo."
          },
          "description": "required_roles is a list of governance roles, derived from permissions, required to run the policy.",
          "example": [
            "actor",
            "credential_viewer"
          ]
        },
        "rs_pt_ver": {
          "type": "integer",
          "description": "rs_pt_ver is the policy engine version.",
          "example": 20180301,
          "format": "int64"
        },
        "severity": {
          "type": "string",
          "description": "severity defines the severity level of incidents raised from this policy template.",
          "example": "low",
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ]
        },
        "short_description": {
          "type": "string",
          "description": "short_description is the short description of the policy template.",
          "example": "Checks for ports that are open in instances"
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at is the last update timestamp in RFC3339 format.",
          "example": "2018-06-12T20:51:02Z",
          "format": "date-time"
        },
        "updated_by": {
          "$ref": "#/definitions/UserResponseBody"
        }
      },
      "description": "UpdateResponseBody result type (default view)",
      "example": {
        "category": "tags",
        "created_at": "2018-06-12T20:31:02Z",
        "created_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        },
        "doc_link": "https://rightscale.com",
        "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
        "href": "/api/governance/projects/60073/policy_templates/a88e0d89",
        "id": "324802",
        "info": {
          "author": "RightScale",
          "support": "support@rightscale.com"
        },
        "kind": "gov#policy_template",
        "name": "unattached_volumes",
        "project_id": 60073,
        "required_roles": [
          "actor",
          "credential_viewer"
        ],
        "rs_pt_ver": 20180301,
        "severity": "low",
        "short_description": "Checks for ports that are open in instances",
        "updated_at": "2018-06-12T20:51:02Z",
        "updated_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        }
      },
      "required": [
        "id",
        "name",
        "href",
        "fingerprint",
        "kind"
      ]
    },
    "PolicyTemplateUpdateUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "UpdateUnauthorizedResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateUploadBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "UploadBadGatewayResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateUploadBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "UploadBadRequestResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateUploadConflictResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.conflict_error; view=default",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "a unique identifier for this particular occurrence of the problem.",
          "example": "Eveniet molestias esse nobis corrupti officiis ducimus."
        },
        "name": {
          "type": "string",
          "description": "name of error.",
          "example": "conflict",
          "enum": [
            "conflict"
          ]
        },
        "updatable": {
          "type": "boolean",
          "description": "updatable indicates whether a 'create' request error can be resolved by making an 'update' request instead. It is used to indicate whether a resource is built-in and whether the user has permission to modify it.",
          "example": true
        }
      },
      "description": "UploadConflictResponseBody result type (default view)",
      "example": {
        "id": "Voluptatem quia voluptatibus in.",
        "name": "conflict",
        "updatable": true
      },
      "required": [
        "id",
        "name",
        "updatable"
      ]
    },
    "PolicyTemplateUploadForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "UploadForbiddenResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateUploadInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "UploadInternalErrorResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PolicyTemplateUploadInvalidTemplateResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.compilation_errors; view=default",
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompilationErrorResponseBody"
          },
          "description": "errors is a JSON Array of compilation errors.",
          "example": [
            {
              "origin": "template: template.policy, line: 3",
              "problem": "Undefined variable or method",
              "resolution": "Define 'foo'",
              "summary": "'foo' is undefined"
            },
            {
              "origin": "template: template.policy, line: 3",
              "problem": "Undefined variable or method",
              "resolution": "Define 'foo'",
              "summary": "'foo' is undefined"
            },
            {
              "origin": "template: template.policy, line: 3",
              "problem": "Undefined variable or method",
              "resolution": "Define 'foo'",
              "summary": "'foo' is undefined"
            },
            {
              "origin": "template: template.policy, line: 3",
              "problem": "Undefined variable or method",
              "resolution": "Define 'foo'",
              "summary": "'foo' is undefined"
            }
          ]
        },
        "id": {
          "type": "string",
          "description": "id is a unique identifier for this particular occurrence of the problem.",
          "example": "305913"
        },
        "name": {
          "type": "string",
          "description": "name of error",
          "example": "invalid_template",
          "enum": [
            "invalid_template"
          ]
        }
      },
      "description": "UploadInvalidTemplateResponseBody result type (default view)",
      "example": {
        "errors": [
          {
            "origin": "template: template.policy, line: 3",
            "problem": "Undefined variable or method",
            "resolution": "Define 'foo'",
            "summary": "'foo' is undefined"
          },
          {
            "origin": "template: template.policy, line: 3",
            "problem": "Undefined variable or method",
            "resolution": "Define 'foo'",
            "summary": "'foo' is undefined"
          },
          {
            "origin": "template: template.policy, line: 3",
            "problem": "Undefined variable or method",
            "resolution": "Define 'foo'",
            "summary": "'foo' is undefined"
          }
        ],
        "id": "305913",
        "name": "invalid_template"
      },
      "required": [
        "id",
        "name",
        "errors"
      ]
    },
    "PolicyTemplateUploadRequestBody": {
      "title": "PolicyTemplateUploadRequestBody",
      "type": "object",
      "properties": {
        "filename": {
          "type": "string",
          "description": "filename is the name of the policy template source code file.",
          "example": "file.pt"
        },
        "source": {
          "type": "string",
          "description": "source is the policy template source code.",
          "example": "policy unattached_volumes do\n\t\t\t\t\t# ...\n\t\t\t\t\tend"
        }
      },
      "example": {
        "filename": "file.pt",
        "source": "policy unattached_volumes do\n\t\t\t\t\t# ...\n\t\t\t\t\tend"
      },
      "required": [
        "filename",
        "source"
      ]
    },
    "PolicyTemplateUploadResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.policy_template; view=default",
      "type": "object",
      "properties": {
        "category": {
          "type": "string",
          "description": "category is the type categorization of the policy template.",
          "example": "tags"
        },
        "created_at": {
          "type": "string",
          "description": "created_at is the policy template creation timestamp in RFC3339 format.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "created_by": {
          "$ref": "#/definitions/UserResponseBody"
        },
        "doc_link": {
          "type": "string",
          "description": "doc_link is an HTTP URI to a page containing detailed documentation for the policy.",
          "example": "https://rightscale.com",
          "format": "uri"
        },
        "fingerprint": {
          "type": "string",
          "description": "fingerprint is a SHA created during compilation. It is used to determine if the template is outdated.",
          "example": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728"
        },
        "href": {
          "type": "string",
          "description": "href is the href of the policy template.",
          "example": "/api/governance/projects/60073/policy_templates/a88e0d89",
          "pattern": "^/api/governance/projects/[0-9]+/policy_templates/[0-9a-f]+$"
        },
        "id": {
          "type": "string",
          "description": "id identifies a policy template by ID.",
          "example": "324802"
        },
        "info": {
          "type": "object",
          "description": "info is an arbitrary set of key/value pairs that provide additional information such as the policy author, support contact information, etc.",
          "example": {
            "author": "RightScale",
            "support": "support@rightscale.com"
          },
          "additionalProperties": true
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#policy_template\".",
          "example": "gov#policy_template",
          "enum": [
            "gov#policy_template"
          ]
        },
        "name": {
          "type": "string",
          "description": "name is the unique name of the policy template in the project.",
          "example": "unattached_volumes"
        },
        "project_id": {
          "type": "integer",
          "description": "project_id is the ID of the project that the policy template applies to.",
          "example": 60073,
          "format": "int64"
        },
        "required_roles": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "Ratione in a."
          },
          "description": "required_roles is a list of governance roles, derived from permissions, required to run the policy.",
          "example": [
            "actor",
            "credential_viewer"
          ]
        },
        "rs_pt_ver": {
          "type": "integer",
          "description": "rs_pt_ver is the policy engine version.",
          "example": 20180301,
          "format": "int64"
        },
        "severity": {
          "type": "string",
          "description": "severity defines the severity level of incidents raised from this policy template.",
          "example": "low",
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ]
        },
        "short_description": {
          "type": "string",
          "description": "short_description is the short description of the policy template.",
          "example": "Checks for ports that are open in instances"
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at is the last update timestamp in RFC3339 format.",
          "example": "2018-06-12T20:51:02Z",
          "format": "date-time"
        },
        "updated_by": {
          "$ref": "#/definitions/UserResponseBody"
        }
      },
      "description": "UploadResponseBody result type (default view)",
      "example": {
        "category": "tags",
        "created_at": "2018-06-12T20:31:02Z",
        "created_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        },
        "doc_link": "https://rightscale.com",
        "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
        "href": "/api/governance/projects/60073/policy_templates/a88e0d89",
        "id": "324802",
        "info": {
          "author": "RightScale",
          "support": "support@rightscale.com"
        },
        "kind": "gov#policy_template",
        "name": "unattached_volumes",
        "project_id": 60073,
        "required_roles": [
          "actor",
          "credential_viewer"
        ],
        "rs_pt_ver": 20180301,
        "severity": "low",
        "short_description": "Checks for ports that are open in instances",
        "updated_at": "2018-06-12T20:51:02Z",
        "updated_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        }
      },
      "required": [
        "id",
        "name",
        "href",
        "fingerprint",
        "kind"
      ]
    },
    "PolicyTemplateUploadUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "UploadUnauthorizedResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ProjectResponseBody": {
      "title": "ProjectResponseBody",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "id is the Project ID",
          "example": 60073,
          "format": "int64"
        },
        "name": {
          "type": "string",
          "description": "name is the Project Name",
          "example": "RightScale Test Account"
        },
        "org_id": {
          "type": "integer",
          "description": "org_id is the RightScale Organization ID",
          "example": 1105,
          "format": "int64"
        },
        "org_name": {
          "type": "string",
          "description": "org_name is the RightScale Organization Name",
          "example": "RightScale QA"
        }
      },
      "description": "Project represents a RightScale project and provides some information about the project.",
      "example": {
        "id": 60073,
        "name": "RightScale Test Account",
        "org_id": 1105,
        "org_name": "RightScale QA"
      },
      "required": [
        "id",
        "name",
        "org_id",
        "org_name"
      ]
    },
    "PublishedTemplateCreateBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "CreateBadGatewayResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateCreateBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "CreateBadRequestResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateCreateConflictResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.conflict_error; view=default",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "a unique identifier for this particular occurrence of the problem.",
          "example": "Autem omnis velit repellendus sapiente."
        },
        "name": {
          "type": "string",
          "description": "name of error.",
          "example": "conflict",
          "enum": [
            "conflict"
          ]
        },
        "updatable": {
          "type": "boolean",
          "description": "updatable indicates whether a 'create' request error can be resolved by making an 'update' request instead. It is used to indicate whether a resource is built-in and whether the user has permission to modify it.",
          "example": true
        }
      },
      "description": "CreateConflictResponseBody result type (default view)",
      "example": {
        "id": "Laboriosam corrupti quasi sit.",
        "name": "conflict",
        "updatable": false
      },
      "required": [
        "id",
        "name",
        "updatable"
      ]
    },
    "PublishedTemplateCreateForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "CreateForbiddenResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateCreateInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "CreateInternalErrorResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateCreateNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "CreateNotFoundResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateCreateRequestBody": {
      "title": "PublishedTemplateCreateRequestBody",
      "type": "object",
      "properties": {
        "template_href": {
          "type": "string",
          "description": "template_href is the href of the policy template to publish to the organization.",
          "example": "/api/governance/projects/60073/policy_templates/5b06ead5e0dacc007058c784",
          "pattern": "^/api/governance/projects/[0-9]+/policy_templates/[0-9a-f]+$"
        }
      },
      "example": {
        "template_href": "/api/governance/projects/60073/policy_templates/5b06ead5e0dacc007058c784"
      },
      "required": [
        "template_href"
      ]
    },
    "PublishedTemplateCreateUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "CreateUnauthorizedResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateDeleteBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "DeleteBadGatewayResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateDeleteBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "DeleteBadRequestResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateDeleteForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "DeleteForbiddenResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateDeleteInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "DeleteInternalErrorResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateDeleteNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "DeleteNotFoundResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateDeleteUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "DeleteUnauthorizedResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateHideBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "HideBadGatewayResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateHideBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "HideBadRequestResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateHideForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "HideForbiddenResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateHideInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "HideInternalErrorResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateHideNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "HideNotFoundResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateHideUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "HideUnauthorizedResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateIndexBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "IndexBadGatewayResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateIndexBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "IndexBadRequestResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateIndexForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "IndexForbiddenResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateIndexInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "IndexInternalErrorResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateIndexOKResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.published_template_list; view=default",
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "count is the number of published templates in the list.",
          "example": 20,
          "format": "int64"
        },
        "items": {
          "$ref": "#/definitions/PublishedTemplateResponseBodyCollection"
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#published_template_list\".",
          "example": "gov#published_template_list",
          "enum": [
            "gov#published_template_list"
          ]
        },
        "not_modified": {
          "type": "string",
          "description": "not_modified is a flag used internally that indicates how to encode the HTTP response (i.e. 200 or 304).",
          "example": "false",
          "enum": [
            "true",
            "false"
          ]
        }
      },
      "description": "IndexOKResponseBody result type (default view)",
      "example": {
        "count": 20,
        "items": [
          {
            "built_in": false,
            "category": "tags",
            "created_at": "2018-06-12T20:31:02Z",
            "created_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "doc_link": "https://rightscale.com",
            "filename": "unattached_volumes_policy.pt",
            "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
            "hidden": false,
            "hidden_at": "2018-06-12T20:51:02Z",
            "hidden_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "href": "/api/governance/orgs/009/published_templates/edc1",
            "id": "Quos voluptas provident aspernatur delectus consequatur voluptates.",
            "info": {
              "author": "RightScale",
              "support": "support@rightscale.com"
            },
            "kind": "gov#published_template",
            "long_description": "## Usage...",
            "name": "unattached_volumes",
            "org_id": 1105,
            "parameters": {
              "allowed_ports": {
                "allowed_values": [
                  "80",
                  "8080"
                ],
                "category": "Cloud Filters",
                "description": "The TCP/UDP port numbers that are allowed to be open",
                "index": 2,
                "name": "allowed_ports",
                "type": "list"
              }
            },
            "permissions": {
              "retrieve_volumes": {
                "actions": [
                  "rs_cm.index"
                ],
                "label": "Retrieve Volumes",
                "name": "retrieve_volumes",
                "resources": [
                  "rs_cm.volumes"
                ]
              }
            },
            "policy_template_fingerprint": "95633be0b960b9cefd860123029728c79ae2ab9174d6f0b03c14cbda86bc3079",
            "policy_template_id": "5b3291a5073d78004fcf5bdc",
            "policy_template_url": "https://governance-3.rightscale.com/api/governance/projects/60073/policy_templates/5b045844802e240088b815c0",
            "project_id": 60073,
            "required_roles": [
              "actor",
              "credential_viewer"
            ],
            "rs_pt_ver": 20180301,
            "severity": "low",
            "short_description": "Checks for ports that are open in instances",
            "source": "policy unattached_volumes do\n  # ...\nend",
            "updated_at": "2018-06-12T20:51:02Z",
            "updated_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            }
          },
          {
            "built_in": false,
            "category": "tags",
            "created_at": "2018-06-12T20:31:02Z",
            "created_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "doc_link": "https://rightscale.com",
            "filename": "unattached_volumes_policy.pt",
            "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
            "hidden": false,
            "hidden_at": "2018-06-12T20:51:02Z",
            "hidden_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "href": "/api/governance/orgs/009/published_templates/edc1",
            "id": "Quos voluptas provident aspernatur delectus consequatur voluptates.",
            "info": {
              "author": "RightScale",
              "support": "support@rightscale.com"
            },
            "kind": "gov#published_template",
            "long_description": "## Usage...",
            "name": "unattached_volumes",
            "org_id": 1105,
            "parameters": {
              "allowed_ports": {
                "allowed_values": [
                  "80",
                  "8080"
                ],
                "category": "Cloud Filters",
                "description": "The TCP/UDP port numbers that are allowed to be open",
                "index": 2,
                "name": "allowed_ports",
                "type": "list"
              }
            },
            "permissions": {
              "retrieve_volumes": {
                "actions": [
                  "rs_cm.index"
                ],
                "label": "Retrieve Volumes",
                "name": "retrieve_volumes",
                "resources": [
                  "rs_cm.volumes"
                ]
              }
            },
            "policy_template_fingerprint": "95633be0b960b9cefd860123029728c79ae2ab9174d6f0b03c14cbda86bc3079",
            "policy_template_id": "5b3291a5073d78004fcf5bdc",
            "policy_template_url": "https://governance-3.rightscale.com/api/governance/projects/60073/policy_templates/5b045844802e240088b815c0",
            "project_id": 60073,
            "required_roles": [
              "actor",
              "credential_viewer"
            ],
            "rs_pt_ver": 20180301,
            "severity": "low",
            "short_description": "Checks for ports that are open in instances",
            "source": "policy unattached_volumes do\n  # ...\nend",
            "updated_at": "2018-06-12T20:51:02Z",
            "updated_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            }
          },
          {
            "built_in": false,
            "category": "tags",
            "created_at": "2018-06-12T20:31:02Z",
            "created_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "doc_link": "https://rightscale.com",
            "filename": "unattached_volumes_policy.pt",
            "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
            "hidden": false,
            "hidden_at": "2018-06-12T20:51:02Z",
            "hidden_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            },
            "href": "/api/governance/orgs/009/published_templates/edc1",
            "id": "Quos voluptas provident aspernatur delectus consequatur voluptates.",
            "info": {
              "author": "RightScale",
              "support": "support@rightscale.com"
            },
            "kind": "gov#published_template",
            "long_description": "## Usage...",
            "name": "unattached_volumes",
            "org_id": 1105,
            "parameters": {
              "allowed_ports": {
                "allowed_values": [
                  "80",
                  "8080"
                ],
                "category": "Cloud Filters",
                "description": "The TCP/UDP port numbers that are allowed to be open",
                "index": 2,
                "name": "allowed_ports",
                "type": "list"
              }
            },
            "permissions": {
              "retrieve_volumes": {
                "actions": [
                  "rs_cm.index"
                ],
                "label": "Retrieve Volumes",
                "name": "retrieve_volumes",
                "resources": [
                  "rs_cm.volumes"
                ]
              }
            },
            "policy_template_fingerprint": "95633be0b960b9cefd860123029728c79ae2ab9174d6f0b03c14cbda86bc3079",
            "policy_template_id": "5b3291a5073d78004fcf5bdc",
            "policy_template_url": "https://governance-3.rightscale.com/api/governance/projects/60073/policy_templates/5b045844802e240088b815c0",
            "project_id": 60073,
            "required_roles": [
              "actor",
              "credential_viewer"
            ],
            "rs_pt_ver": 20180301,
            "severity": "low",
            "short_description": "Checks for ports that are open in instances",
            "source": "policy unattached_volumes do\n  # ...\nend",
            "updated_at": "2018-06-12T20:51:02Z",
            "updated_by": {
              "email": "support@rightscale.com",
              "id": 7251,
              "name": "RightScale support"
            }
          }
        ],
        "kind": "gov#published_template_list",
        "not_modified": "false"
      },
      "required": [
        "kind"
      ]
    },
    "PublishedTemplateIndexUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "IndexUnauthorizedResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.published_template; view=default",
      "type": "object",
      "properties": {
        "built_in": {
          "type": "boolean",
          "description": "built_in is a flag to indicate whether the published template is a \"built-in\" RS-supplied template.",
          "example": false
        },
        "category": {
          "type": "string",
          "description": "category is the type categorization of the published template.",
          "example": "tags"
        },
        "created_at": {
          "type": "string",
          "description": "created_at is the published template creation timestamp in RFC3339 format.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "created_by": {
          "$ref": "#/definitions/UserResponseBody"
        },
        "doc_link": {
          "type": "string",
          "description": "doc_link is a HTTP URI to a page containing detailed documentation for the policy.",
          "example": "https://rightscale.com",
          "format": "uri"
        },
        "fingerprint": {
          "type": "string",
          "description": "fingerprint is a SHA created during compilation. It is used to determine if the policy template that this was published from is outdated.",
          "example": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728"
        },
        "hidden": {
          "type": "boolean",
          "description": "hidden is a flag to indicate whether the published template is hidden.",
          "example": false
        },
        "hidden_at": {
          "type": "string",
          "description": "hidden_at is the hidden at timestamp in RFC3339 format.",
          "example": "2018-06-12T20:51:02Z",
          "format": "date-time"
        },
        "hidden_by": {
          "$ref": "#/definitions/UserResponseBody"
        },
        "href": {
          "type": "string",
          "description": "href is the self-referential href of the published template.",
          "example": "/api/governance/orgs/7809/published_templates/3d1",
          "pattern": "^/api/governance/orgs/[0-9]+/published_templates/[0-9a-f]+$"
        },
        "id": {
          "type": "string",
          "description": "id identifies a published template by ID.",
          "example": "Corrupti vel dolor reprehenderit voluptate perferendis voluptatum."
        },
        "info": {
          "type": "object",
          "description": "info is an arbitrary set of key/value pairs that provide additional information such as the policy author, support contact information, etc.",
          "example": {
            "author": "RightScale",
            "support": "support@rightscale.com"
          },
          "additionalProperties": true
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#published_template\".",
          "example": "gov#published_template",
          "enum": [
            "gov#published_template"
          ]
        },
        "name": {
          "type": "string",
          "description": "name is the unique name of the published template in the organization.",
          "example": "unattached_volumes"
        },
        "org_id": {
          "type": "integer",
          "description": "org_id is the ID of the organization that the published template belongs to.",
          "example": 1105,
          "format": "int64"
        },
        "policy_template_fingerprint": {
          "type": "string",
          "description": "policy_template_fingerprint is fingerprint of the policy template. It is used to determine if the policy template that this was published from is outdated.",
          "example": "95633be0b960b9cefd860123029728c79ae2ab9174d6f0b03c14cbda86bc3079"
        },
        "policy_template_id": {
          "type": "string",
          "description": "policy_template_id is the ID of the policy template from which the published template originated.",
          "example": "5b3291a5073d78004fcf5bdc"
        },
        "policy_template_url": {
          "type": "string",
          "description": "policy_template_url is the full URL to the policy template from which the published template originated.",
          "example": "https://governance-3.rightscale.com/api/governance/projects/60073/policy_templates/5b045844802e240088b815c0",
          "format": "uri"
        },
        "project_id": {
          "type": "integer",
          "description": "project_id is the ID of the project that the published template is published from.",
          "example": 60073,
          "format": "int64"
        },
        "required_roles": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "Voluptas voluptas qui non dolorem."
          },
          "description": "required_roles is a list of governance roles, derived from permissions, required to run the policy.",
          "example": [
            "actor",
            "credential_viewer"
          ]
        },
        "rs_pt_ver": {
          "type": "integer",
          "description": "rs_pt_ver is the policy engine version.",
          "example": 20180301,
          "format": "int64"
        },
        "severity": {
          "type": "string",
          "description": "severity defines the severity level of incidents raised from this published template.",
          "example": "low",
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ]
        },
        "short_description": {
          "type": "string",
          "description": "short_description is the short description of the published template.",
          "example": "Checks for ports that are open in instances"
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at is the published template update timestamp in RFC3339 format.",
          "example": "2018-06-12T20:51:02Z",
          "format": "date-time"
        },
        "updated_by": {
          "$ref": "#/definitions/UserResponseBody"
        }
      },
      "description": "PublishedTemplate describes a previously created published template. (default view)",
      "example": {
        "built_in": false,
        "category": "tags",
        "created_at": "2018-06-12T20:31:02Z",
        "created_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        },
        "doc_link": "https://rightscale.com",
        "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
        "hidden": false,
        "hidden_at": "2018-06-12T20:51:02Z",
        "hidden_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        },
        "href": "/api/governance/orgs/5451/published_templates/77465",
        "id": "Dolores voluptatem architecto delectus.",
        "info": {
          "author": "RightScale",
          "support": "support@rightscale.com"
        },
        "kind": "gov#published_template",
        "name": "unattached_volumes",
        "org_id": 1105,
        "policy_template_fingerprint": "95633be0b960b9cefd860123029728c79ae2ab9174d6f0b03c14cbda86bc3079",
        "policy_template_id": "5b3291a5073d78004fcf5bdc",
        "policy_template_url": "https://governance-3.rightscale.com/api/governance/projects/60073/policy_templates/5b045844802e240088b815c0",
        "project_id": 60073,
        "required_roles": [
          "actor",
          "credential_viewer"
        ],
        "rs_pt_ver": 20180301,
        "severity": "low",
        "short_description": "Checks for ports that are open in instances",
        "updated_at": "2018-06-12T20:51:02Z",
        "updated_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        }
      },
      "required": [
        "id",
        "name",
        "href",
        "fingerprint",
        "kind"
      ]
    },
    "PublishedTemplateResponseBodyCollection": {
      "title": "Mediatype identifier: application/vnd.rightscale.published_template; type=collection; view=default",
      "type": "array",
      "items": {
        "$ref": "#/definitions/PublishedTemplateResponseBody"
      },
      "description": "PublishedTemplateCollectionResponseBody is the result type for an array of PublishedTemplateResponseBody (default view)",
      "example": [
        {
          "built_in": false,
          "category": "tags",
          "created_at": "2018-06-12T20:31:02Z",
          "created_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "doc_link": "https://rightscale.com",
          "filename": "unattached_volumes_policy.pt",
          "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
          "hidden": false,
          "hidden_at": "2018-06-12T20:51:02Z",
          "hidden_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "href": "/api/governance/orgs/009/published_templates/edc1",
          "id": "Quos voluptas provident aspernatur delectus consequatur voluptates.",
          "info": {
            "author": "RightScale",
            "support": "support@rightscale.com"
          },
          "kind": "gov#published_template",
          "long_description": "## Usage...",
          "name": "unattached_volumes",
          "org_id": 1105,
          "parameters": {
            "allowed_ports": {
              "allowed_values": [
                "80",
                "8080"
              ],
              "category": "Cloud Filters",
              "description": "The TCP/UDP port numbers that are allowed to be open",
              "index": 2,
              "name": "allowed_ports",
              "type": "list"
            }
          },
          "permissions": {
            "retrieve_volumes": {
              "actions": [
                "rs_cm.index"
              ],
              "label": "Retrieve Volumes",
              "name": "retrieve_volumes",
              "resources": [
                "rs_cm.volumes"
              ]
            }
          },
          "policy_template_fingerprint": "95633be0b960b9cefd860123029728c79ae2ab9174d6f0b03c14cbda86bc3079",
          "policy_template_id": "5b3291a5073d78004fcf5bdc",
          "policy_template_url": "https://governance-3.rightscale.com/api/governance/projects/60073/policy_templates/5b045844802e240088b815c0",
          "project_id": 60073,
          "required_roles": [
            "actor",
            "credential_viewer"
          ],
          "rs_pt_ver": 20180301,
          "severity": "low",
          "short_description": "Checks for ports that are open in instances",
          "source": "policy unattached_volumes do\n  # ...\nend",
          "updated_at": "2018-06-12T20:51:02Z",
          "updated_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          }
        },
        {
          "built_in": false,
          "category": "tags",
          "created_at": "2018-06-12T20:31:02Z",
          "created_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "doc_link": "https://rightscale.com",
          "filename": "unattached_volumes_policy.pt",
          "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
          "hidden": false,
          "hidden_at": "2018-06-12T20:51:02Z",
          "hidden_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "href": "/api/governance/orgs/009/published_templates/edc1",
          "id": "Quos voluptas provident aspernatur delectus consequatur voluptates.",
          "info": {
            "author": "RightScale",
            "support": "support@rightscale.com"
          },
          "kind": "gov#published_template",
          "long_description": "## Usage...",
          "name": "unattached_volumes",
          "org_id": 1105,
          "parameters": {
            "allowed_ports": {
              "allowed_values": [
                "80",
                "8080"
              ],
              "category": "Cloud Filters",
              "description": "The TCP/UDP port numbers that are allowed to be open",
              "index": 2,
              "name": "allowed_ports",
              "type": "list"
            }
          },
          "permissions": {
            "retrieve_volumes": {
              "actions": [
                "rs_cm.index"
              ],
              "label": "Retrieve Volumes",
              "name": "retrieve_volumes",
              "resources": [
                "rs_cm.volumes"
              ]
            }
          },
          "policy_template_fingerprint": "95633be0b960b9cefd860123029728c79ae2ab9174d6f0b03c14cbda86bc3079",
          "policy_template_id": "5b3291a5073d78004fcf5bdc",
          "policy_template_url": "https://governance-3.rightscale.com/api/governance/projects/60073/policy_templates/5b045844802e240088b815c0",
          "project_id": 60073,
          "required_roles": [
            "actor",
            "credential_viewer"
          ],
          "rs_pt_ver": 20180301,
          "severity": "low",
          "short_description": "Checks for ports that are open in instances",
          "source": "policy unattached_volumes do\n  # ...\nend",
          "updated_at": "2018-06-12T20:51:02Z",
          "updated_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          }
        },
        {
          "built_in": false,
          "category": "tags",
          "created_at": "2018-06-12T20:31:02Z",
          "created_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "doc_link": "https://rightscale.com",
          "filename": "unattached_volumes_policy.pt",
          "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
          "hidden": false,
          "hidden_at": "2018-06-12T20:51:02Z",
          "hidden_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "href": "/api/governance/orgs/009/published_templates/edc1",
          "id": "Quos voluptas provident aspernatur delectus consequatur voluptates.",
          "info": {
            "author": "RightScale",
            "support": "support@rightscale.com"
          },
          "kind": "gov#published_template",
          "long_description": "## Usage...",
          "name": "unattached_volumes",
          "org_id": 1105,
          "parameters": {
            "allowed_ports": {
              "allowed_values": [
                "80",
                "8080"
              ],
              "category": "Cloud Filters",
              "description": "The TCP/UDP port numbers that are allowed to be open",
              "index": 2,
              "name": "allowed_ports",
              "type": "list"
            }
          },
          "permissions": {
            "retrieve_volumes": {
              "actions": [
                "rs_cm.index"
              ],
              "label": "Retrieve Volumes",
              "name": "retrieve_volumes",
              "resources": [
                "rs_cm.volumes"
              ]
            }
          },
          "policy_template_fingerprint": "95633be0b960b9cefd860123029728c79ae2ab9174d6f0b03c14cbda86bc3079",
          "policy_template_id": "5b3291a5073d78004fcf5bdc",
          "policy_template_url": "https://governance-3.rightscale.com/api/governance/projects/60073/policy_templates/5b045844802e240088b815c0",
          "project_id": 60073,
          "required_roles": [
            "actor",
            "credential_viewer"
          ],
          "rs_pt_ver": 20180301,
          "severity": "low",
          "short_description": "Checks for ports that are open in instances",
          "source": "policy unattached_volumes do\n  # ...\nend",
          "updated_at": "2018-06-12T20:51:02Z",
          "updated_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          }
        },
        {
          "built_in": false,
          "category": "tags",
          "created_at": "2018-06-12T20:31:02Z",
          "created_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "doc_link": "https://rightscale.com",
          "filename": "unattached_volumes_policy.pt",
          "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
          "hidden": false,
          "hidden_at": "2018-06-12T20:51:02Z",
          "hidden_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          },
          "href": "/api/governance/orgs/009/published_templates/edc1",
          "id": "Quos voluptas provident aspernatur delectus consequatur voluptates.",
          "info": {
            "author": "RightScale",
            "support": "support@rightscale.com"
          },
          "kind": "gov#published_template",
          "long_description": "## Usage...",
          "name": "unattached_volumes",
          "org_id": 1105,
          "parameters": {
            "allowed_ports": {
              "allowed_values": [
                "80",
                "8080"
              ],
              "category": "Cloud Filters",
              "description": "The TCP/UDP port numbers that are allowed to be open",
              "index": 2,
              "name": "allowed_ports",
              "type": "list"
            }
          },
          "permissions": {
            "retrieve_volumes": {
              "actions": [
                "rs_cm.index"
              ],
              "label": "Retrieve Volumes",
              "name": "retrieve_volumes",
              "resources": [
                "rs_cm.volumes"
              ]
            }
          },
          "policy_template_fingerprint": "95633be0b960b9cefd860123029728c79ae2ab9174d6f0b03c14cbda86bc3079",
          "policy_template_id": "5b3291a5073d78004fcf5bdc",
          "policy_template_url": "https://governance-3.rightscale.com/api/governance/projects/60073/policy_templates/5b045844802e240088b815c0",
          "project_id": 60073,
          "required_roles": [
            "actor",
            "credential_viewer"
          ],
          "rs_pt_ver": 20180301,
          "severity": "low",
          "short_description": "Checks for ports that are open in instances",
          "source": "policy unattached_volumes do\n  # ...\nend",
          "updated_at": "2018-06-12T20:51:02Z",
          "updated_by": {
            "email": "support@rightscale.com",
            "id": 7251,
            "name": "RightScale support"
          }
        }
      ]
    },
    "PublishedTemplateResponseBodyLink": {
      "title": "Mediatype identifier: application/vnd.rightscale.published_template; view=default",
      "type": "object",
      "properties": {
        "built_in": {
          "type": "boolean",
          "description": "built_in is a flag to indicate whether the published template is a \"built-in\" RS-supplied template.",
          "example": false
        },
        "fingerprint": {
          "type": "string",
          "description": "fingerprint is a SHA created during compilation. It is used to determine if the policy template that this was published from is outdated.",
          "example": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728"
        },
        "href": {
          "type": "string",
          "description": "href is the self-referential href of the published template.",
          "example": "/api/governance/orgs/46252/published_templates/8e54c",
          "pattern": "^/api/governance/orgs/[0-9]+/published_templates/[0-9a-f]+$"
        },
        "id": {
          "type": "string",
          "description": "id identifies a published template by ID.",
          "example": "Ipsam delectus maxime fugiat."
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#published_template\".",
          "example": "gov#published_template",
          "enum": [
            "gov#published_template"
          ]
        },
        "name": {
          "type": "string",
          "description": "name is the unique name of the published template in the organization.",
          "example": "unattached_volumes"
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at is the published template update timestamp in RFC3339 format.",
          "example": "2018-06-12T20:51:02Z",
          "format": "date-time"
        },
        "updated_by": {
          "$ref": "#/definitions/UserResponseBody"
        }
      },
      "description": "PublishedTemplate describes a previously created published template. (default view)",
      "example": {
        "built_in": false,
        "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
        "href": "/api/governance/orgs/73651/published_templates/a451",
        "id": "Officia dolorem quia corporis sunt.",
        "kind": "gov#published_template",
        "name": "unattached_volumes",
        "updated_at": "2018-06-12T20:51:02Z",
        "updated_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        }
      },
      "required": [
        "id",
        "name",
        "href",
        "fingerprint",
        "kind"
      ]
    },
    "PublishedTemplateShowBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "ShowBadGatewayResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateShowBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "ShowBadRequestResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateShowForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "ShowForbiddenResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateShowInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "ShowInternalErrorResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateShowNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "ShowNotFoundResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateShowResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.published_template; view=default",
      "type": "object",
      "properties": {
        "built_in": {
          "type": "boolean",
          "description": "built_in is a flag to indicate whether the published template is a \"built-in\" RS-supplied template.",
          "example": false
        },
        "category": {
          "type": "string",
          "description": "category is the type categorization of the published template.",
          "example": "tags"
        },
        "created_at": {
          "type": "string",
          "description": "created_at is the published template creation timestamp in RFC3339 format.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "created_by": {
          "$ref": "#/definitions/UserResponseBody"
        },
        "doc_link": {
          "type": "string",
          "description": "doc_link is a HTTP URI to a page containing detailed documentation for the policy.",
          "example": "https://rightscale.com",
          "format": "uri"
        },
        "fingerprint": {
          "type": "string",
          "description": "fingerprint is a SHA created during compilation. It is used to determine if the policy template that this was published from is outdated.",
          "example": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728"
        },
        "hidden": {
          "type": "boolean",
          "description": "hidden is a flag to indicate whether the published template is hidden.",
          "example": false
        },
        "hidden_at": {
          "type": "string",
          "description": "hidden_at is the hidden at timestamp in RFC3339 format.",
          "example": "2018-06-12T20:51:02Z",
          "format": "date-time"
        },
        "hidden_by": {
          "$ref": "#/definitions/UserResponseBody"
        },
        "href": {
          "type": "string",
          "description": "href is the self-referential href of the published template.",
          "example": "/api/governance/orgs/8580/published_templates/0e2",
          "pattern": "^/api/governance/orgs/[0-9]+/published_templates/[0-9a-f]+$"
        },
        "id": {
          "type": "string",
          "description": "id identifies a published template by ID.",
          "example": "Iure debitis."
        },
        "info": {
          "type": "object",
          "description": "info is an arbitrary set of key/value pairs that provide additional information such as the policy author, support contact information, etc.",
          "example": {
            "author": "RightScale",
            "support": "support@rightscale.com"
          },
          "additionalProperties": true
        },
        "kind": {
          "type": "string",
          "description": "kind is \"gov#published_template\".",
          "example": "gov#published_template",
          "enum": [
            "gov#published_template"
          ]
        },
        "name": {
          "type": "string",
          "description": "name is the unique name of the published template in the organization.",
          "example": "unattached_volumes"
        },
        "org_id": {
          "type": "integer",
          "description": "org_id is the ID of the organization that the published template belongs to.",
          "example": 1105,
          "format": "int64"
        },
        "policy_template_fingerprint": {
          "type": "string",
          "description": "policy_template_fingerprint is fingerprint of the policy template. It is used to determine if the policy template that this was published from is outdated.",
          "example": "95633be0b960b9cefd860123029728c79ae2ab9174d6f0b03c14cbda86bc3079"
        },
        "policy_template_id": {
          "type": "string",
          "description": "policy_template_id is the ID of the policy template from which the published template originated.",
          "example": "5b3291a5073d78004fcf5bdc"
        },
        "policy_template_url": {
          "type": "string",
          "description": "policy_template_url is the full URL to the policy template from which the published template originated.",
          "example": "https://governance-3.rightscale.com/api/governance/projects/60073/policy_templates/5b045844802e240088b815c0",
          "format": "uri"
        },
        "project_id": {
          "type": "integer",
          "description": "project_id is the ID of the project that the published template is published from.",
          "example": 60073,
          "format": "int64"
        },
        "required_roles": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "Rerum eos ut."
          },
          "description": "required_roles is a list of governance roles, derived from permissions, required to run the policy.",
          "example": [
            "actor",
            "credential_viewer"
          ]
        },
        "rs_pt_ver": {
          "type": "integer",
          "description": "rs_pt_ver is the policy engine version.",
          "example": 20180301,
          "format": "int64"
        },
        "severity": {
          "type": "string",
          "description": "severity defines the severity level of incidents raised from this published template.",
          "example": "low",
          "enum": [
            "low",
            "medium",
            "high",
            "critical"
          ]
        },
        "short_description": {
          "type": "string",
          "description": "short_description is the short description of the published template.",
          "example": "Checks for ports that are open in instances"
        },
        "updated_at": {
          "type": "string",
          "description": "updated_at is the published template update timestamp in RFC3339 format.",
          "example": "2018-06-12T20:51:02Z",
          "format": "date-time"
        },
        "updated_by": {
          "$ref": "#/definitions/UserResponseBody"
        }
      },
      "description": "ShowResponseBody result type (default view)",
      "example": {
        "built_in": false,
        "category": "tags",
        "created_at": "2018-06-12T20:31:02Z",
        "created_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        },
        "doc_link": "https://rightscale.com",
        "fingerprint": "95633be0b960b9c79ae2ab9174d6f0b03c14cbda86bc3079cefd860123029728",
        "hidden": false,
        "hidden_at": "2018-06-12T20:51:02Z",
        "hidden_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        },
        "href": "/api/governance/orgs/9196/published_templates/9f0",
        "id": "Sed hic repellendus quis labore nemo.",
        "info": {
          "author": "RightScale",
          "support": "support@rightscale.com"
        },
        "kind": "gov#published_template",
        "name": "unattached_volumes",
        "org_id": 1105,
        "policy_template_fingerprint": "95633be0b960b9cefd860123029728c79ae2ab9174d6f0b03c14cbda86bc3079",
        "policy_template_id": "5b3291a5073d78004fcf5bdc",
        "policy_template_url": "https://governance-3.rightscale.com/api/governance/projects/60073/policy_templates/5b045844802e240088b815c0",
        "project_id": 60073,
        "required_roles": [
          "actor",
          "credential_viewer"
        ],
        "rs_pt_ver": 20180301,
        "severity": "low",
        "short_description": "Checks for ports that are open in instances",
        "updated_at": "2018-06-12T20:51:02Z",
        "updated_by": {
          "email": "support@rightscale.com",
          "id": 7251,
          "name": "RightScale support"
        }
      },
      "required": [
        "id",
        "name",
        "href",
        "fingerprint",
        "kind"
      ]
    },
    "PublishedTemplateShowUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "ShowUnauthorizedResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateUnhideBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "UnhideBadGatewayResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateUnhideBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "UnhideBadRequestResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateUnhideForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "UnhideForbiddenResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateUnhideInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "UnhideInternalErrorResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateUnhideNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "UnhideNotFoundResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateUnhideUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "UnhideUnauthorizedResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateUpdateBadGatewayResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "UpdateBadGatewayResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateUpdateBadRequestResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": false
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "UpdateBadRequestResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": true,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateUpdateForbiddenResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "UpdateForbiddenResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateUpdateInternalErrorResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": true
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": true
        }
      },
      "description": "UpdateInternalErrorResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": true
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateUpdateNotFoundResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "UpdateNotFoundResponseBody result type (default view)",
      "example": {
        "fault": false,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "PublishedTemplateUpdateRequestBody": {
      "title": "PublishedTemplateUpdateRequestBody",
      "type": "object",
      "properties": {
        "template_href": {
          "type": "string",
          "description": "template_href is the href of the policy template to publish to the organization.",
          "example": "/api/governance/projects/60073/policy_templates/5b06ead5e0dacc007058c784",
          "pattern": "^/api/governance/projects/[0-9]+/policy_templates/[0-9a-f]+$"
        }
      },
      "example": {
        "template_href": "/api/governance/projects/60073/policy_templates/5b06ead5e0dacc007058c784"
      },
      "required": [
        "template_href"
      ]
    },
    "PublishedTemplateUpdateUnauthorizedResponseBody": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "fault": {
          "type": "boolean",
          "description": "Is the error a server-side fault?",
          "example": true
        },
        "id": {
          "type": "string",
          "description": "ID is a unique identifier for this particular occurrence of the problem.",
          "example": "123abc"
        },
        "message": {
          "type": "string",
          "description": "Message is a human-readable explanation specific to this occurrence of the problem.",
          "example": "parameter 'p' must be an integer"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of this class of errors.",
          "example": "bad_request"
        },
        "temporary": {
          "type": "boolean",
          "description": "Is the error temporary?",
          "example": false
        },
        "timeout": {
          "type": "boolean",
          "description": "Is the error a timeout?",
          "example": false
        }
      },
      "description": "UpdateUnauthorizedResponseBody result type (default view)",
      "example": {
        "fault": true,
        "id": "123abc",
        "message": "parameter 'p' must be an integer",
        "name": "bad_request",
        "temporary": false,
        "timeout": false
      },
      "required": [
        "name",
        "id",
        "message",
        "temporary",
        "timeout",
        "fault"
      ]
    },
    "ResolutionActionResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.resolution_action; view=default",
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "description": "error is any error occurred when handling the action.",
          "example": "failed to create cloud workflow process: definition foo not found"
        },
        "finished_at": {
          "type": "string",
          "description": "finished_at is the time when the action was finished.",
          "example": "2018-06-12T22:31:02Z",
          "format": "date-time"
        },
        "started_at": {
          "type": "string",
          "description": "started_at is the time when the action was started.",
          "example": "2018-06-12T20:31:02Z",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "status is the status of the action.",
          "example": "running",
          "enum": [
            "queued",
            "running",
            "completed",
            "failed"
          ]
        },
        "type": {
          "type": "string",
          "description": "type is the type of the action.",
          "example": "email",
          "enum": [
            "email",
            "cloud_workflow"
          ]
        }
      },
      "description": "ResolutionAction holds the status of a single action in a resolution.",
      "example": {
        "error": "failed to create cloud workflow process: definition foo not found",
        "finished_at": "2018-06-12T22:31:02Z",
        "started_at": "2018-06-12T20:31:02Z",
        "status": "running",
        "type": "email"
      },
      "required": [
        "type",
        "status"
      ]
    },
    "ResolutionResponseBody": {
      "title": "Mediatype identifier: application/vnd.rightscale.resolution; view=default",
      "type": "object",
      "properties": {
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResolutionActionResponseBody"
          },
          "description": "actions is the list of individual actions.",
          "example": [
            {
              "error": "failed to create cloud workflow process: definition foo not found",
              "finished_at": "2018-06-12T22:31:02Z",
              "started_at": "2018-06-12T20:31:02Z",
              "status": "running",
              "type": "email"
            },
            {
              "error": "failed to create cloud workflow process: definition foo not found",
              "finished_at": "2018-06-12T22:31:02Z",
              "started_at": "2018-06-12T20:31:02Z",
              "status": "running",
              "type": "email"
            }
          ]
        },
        "name": {
          "type": "string",
          "description": "name is the name of the resolution.",
          "example": "send_email"
        },
        "status": {
          "type": "string",
          "description": "status is the status of the set of resolution actions.",
          "example": "running",
          "enum": [
            "queued",
            "aborted",
            "running",
            "completed",
            "failed"
          ]
        }
      },
      "description": "Resolution holds the status of one or more actions of a resolution.",
      "example": {
        "actions": [
          {
            "error": "failed to create cloud workflow process: definition foo not found",
            "finished_at": "2018-06-12T22:31:02Z",
            "started_at": "2018-06-12T20:31:02Z",
            "status": "running",
            "type": "email"
          },
          {
            "error": "failed to create cloud workflow process: definition foo not found",
            "finished_at": "2018-06-12T22:31:02Z",
            "started_at": "2018-06-12T20:31:02Z",
            "status": "running",
            "type": "email"
          },
          {
            "error": "failed to create cloud workflow process: definition foo not found",
            "finished_at": "2018-06-12T22:31:02Z",
            "started_at": "2018-06-12T20:31:02Z",
            "status": "running",
            "type": "email"
          }
        ],
        "name": "send_email",
        "status": "running"
      },
      "required": [
        "status",
        "name",
        "actions"
      ]
    },
    "UserResponseBody": {
      "title": "UserResponseBody",
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "email of user",
          "example": "support@rightscale.com",
          "format": "email"
        },
        "id": {
          "type": "integer",
          "description": "ID of user",
          "example": 7251,
          "format": "int64"
        },
        "name": {
          "type": "string",
          "description": "name of user, usually of the form 'First Last'",
          "example": "RightScale support"
        }
      },
      "description": "User represents a registered RightScale user.",
      "example": {
        "email": "support@rightscale.com",
        "id": 7251,
        "name": "RightScale support"
      },
      "required": [
        "id",
        "email",
        "name"
      ]
    }
  },
  "securityDefinitions": {
    "GlobalSession": {
      "type": "apiKey",
      "description": "Secures endpoint by requiring a valid JWT token retrieved via user credentials.\n**Security Scopes**:\n  * `governance:policy_template:compile`: Allows compiling policy templates\n  * `governance:policy_template:upload`: Allows uploading policy templates\n  * `governance:policy_template:update`: Allows updating policy templates\n  * `governance:policy_template:delete`: Allows deleting policy templates\n  * `governance:policy_template:show`: Allows showing policy templates\n  * `governance:policy_template:index`: Allows indexing policy templates\n  * `governance:published_template:create`: Allows creating published templates\n  * `governance:published_template:update`: Allows updating published templates\n  * `governance:published_template:hide`: Allows updating published templates\n  * `governance:published_template:unhide`: Allows updating published templates\n  * `governance:published_template:delete`: Allows updating published templates\n  * `governance:published_template:show`: Allows showing published templates\n  * `governance:published_template:index`: Allows indexing published templates\n  * `governance:applied_policy:create`: Allows creating applied policies\n  * `governance:applied_policy:delete`: Allows updating applied policies\n  * `governance:applied_policy:show`: Allows showing applied policies\n  * `governance:applied_policy:show_log`: Allows showing applied policy logs\n  * `governance:applied_policy:index`: Allows indexing applied policies\n  * `governance:applied_policy:evaluate`: Allows evaluating applied policies on demand\n  * `governance:incident:resolve`: Allows resolving incidents\n  * `governance:incident:show`: Allows showing incidents\n  * `governance:incident:index`: Allows indexing incidents",
      "name": "Authorization",
      "in": "header"
    }
  }
}
